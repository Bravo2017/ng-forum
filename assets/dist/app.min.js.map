{"version":3,"sources":["filters/dateFilter.js","app.module.js","app.run.js","app.config.js","directives/customngChange.js","directives/otherUserCard.js","directives/replyDateDirective.js","directives/userCardDirective.js","filters/emoteFilter.js","filters/nonFullDateFilter.js","services/authCheckTrue.js","services/dateService.js","services/editReplyService.js","services/editTopicService.js","services/emojiList.js","services/encodeImageToBase64.js","services/letterAvatarService.js","services/loadingService.js","services/otherUserProfilePageService.js","services/otherUserService.js","services/refService.js","services/replaceService.js","services/replyService.js","services/timeService.js","404/controllers/404Controller.js","auth/controllers/authCtrl.js","authDesc/controllers/authDescCtrl.js","editReply/controllers/editReplyCtrl.js","editTopic/controllers/editTopicCtrl.js","editTopicPanel/controllers/editTopicPanelCtrl.js","home/controller/homeCtrl.js","loading/controllers/loadingCtrl.js","newReply/controllers/newReplyCtrl.js","newTopic/controllers/newTopicCtrl.js","otherUserProfile/controllers/otherUserProfileCtrl.js","otherUserProfilePage/controllers/otherUserProfilePageCtrl.js","profile/controllers/profileCtrl.js","settings/controllers/settingsCtrl.js","topic/controllers/topicCtrl.js","authHome/authHomeCtrl.js","settings/desciptonChange.js","settings/emailSettingsCtrl.js","settings/imageChangeCtrl.js","settings/passwordChangeCtrl.js","settings/usernameChangeCtrl.js"],"names":["dateFilter","timeService","input","getTimeF","Date","parseInt","angular","module","run","$rootScope","$location","$state","$on","event","next","previous","error","go","stateParams","$stateProvider","$urlRouterProvider","$mdThemingProvider","theme","primaryPalette","otherwise","state","url","templateUrl","controller","resolve","currentAuth","refService","app","config","customOnChange","restrict","link","scope","element","attrs","onChangeHandler","$eval","bind","directive","otherUserCard","transclude","name","image","Moderator","desc","elem","ctrl","$scope","replyDirective","template","elm","dateNotParsed","innerText","console","log","userCardDirective","uid","email","filter","emoteFilterfunc","$sce","replace","string","str1","str2","RegExp","emojieList",":)",":smile:",":(",":sad:",":D",":smiley:",":;",":very_happy:",":P",":tounge_stuck_out:",":X",":cant_talk:","xD","-1",":minus_one:","+1",":plus_one:","marked","emoji","hasOwnProperty","trustAsHtml","nonFullDateFilterFunc","JSON","stringify","substring","authCheckService","this","checkAuth","dest","getAuth","service","dateService","formatDate","date","year","getFullYear","month","getUTCMonth","day","getUTCDate","slice","toString","substr","formattedDate","editReplyService","topicCreatorName","nonParsedDate","topicCreatorUID","pushK","setInfo","push","getName","getDatee","getTopicUID","getPushK","editTopicFuncService","dateCreated","setDateCreated","value","getDateCreated","emojiListFunc","String","prototype","replaceAt","index","character","length","replaceAll","ignore","currentRenderEmojies","valRend","encodeImageToBase64","replyService","encode","document","file","ref","UID","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","srcData","target","result","child","update","Image","once","snapshot","forEach","childSnapshot","childData","key","val","pushKey","Avatar","EvenChild","childDataNest","replyCreatorUID","replyCreatorAvatar","readAsDataURL","letterAvatarServiceFunc","$http","letters","a","letter","URL","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","numbers","0","number","1","2","3","4","5","6","7","8","9","Mystery","loadJSON","get","then","data","logLetter","getLetterURL","loaderData","char","charAt","len","lenNum","URLVALUE","toLowerCase","loadingServiceFunc","loadingTo","setLoadingTo","getLoadingTo","otherUserProfilePageServicefunc","otherUserID","setID","ID","getID","otherUserInfo","otherACTUALINFO","setUserInfo","info","getUserInfo","ACTUALsetUserInfo","ACTUALgetUserInfo","$firebaseAuth","Firebase","refAuth","replaceServicefunc","replaceAllString","topicTitle","creatorTitle","creatorUID","creatorUsername","creatorValue","creatorDate","creatorAvatar","creatorEmail","timeSinceCreated","postNum","setTopicInfo","title","creator","username","since","avatar","getTopicInfo","time","constructor","getTime","time_formats","seconds","token","list_choice","Math","abs","format","floor","getTimeS","interval","ErrControllerFunc","authCtrl","$firebaseObject","authCheckTrueService","$firebaseArray","$mdDialog","letterAvatarService","PASSWORDRESET","possibleChars","password","random","loadImageJSON","toggleClass","enabled","close","forgotPass","alertify","prompt","evt","resetPassword","code","success","oAuthLogin","provider","authWithOAuthPopup","authData","unauth","usernames","snapLog","vex","dialog","message","placeholder","callback","$loaded","Username","isDupe","createUser","userData","set","displayName","Email","profileImageURL","BronzeBadge","SilverBadge","GoldBadge","PlatinumBadge","newUser","profileBackground","followers","following","profileViews","Precence","cachedUserProfile","profile_background_image_url_https","isUsernameDupeNested","setTimeout","location","reload","loginAUTH","authWithPassword","user","regissterForm","isUsernameDupe","on","childSNap","register","$evalAsync","letterAvatar","setResponse","show","alert","clickOutsideToClose","textContent","ariaLabel","ok","openFrom","top","width","height","closeTo","left","cancel","authDescCtrl","$mdMedia","$mdBottomSheet","$timeout","bookmarked","rep","returne","snapshotBookMarkOutlineTopic","evenChildBook","bookchildData","Bookmarks","authDataDesc","Bookmark","topic","topicName","topicViewsLen","dataChild","Views","times","ViewsLen","goToPerson","person","targetEvent","loadUsers","tagsOption","Tags","showNewTopic","ev","useFullScreen","customFullscreen","parent","body","$requireAuth","fullscreen","clickedItem","goToTOPICAUTCOMPLETE","USERNAME","POST","Postnum","goToTopic","postnum","editReplyFunc","editTopicService","hide","answer","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","lang","hljs","highlightAuto","myConfig","create","onChange","valueField","labelField","maxItems","required","$watch","current","original","outputText","prop","editREPLY","topicPushKey","childSnap","replyCreatorValue","editValue","editTopicFunc","submitNewEdit","newSentence","edit","sentence","DATE","DateCreated","Value","editTopicPanelCtrlfunc","$stateParams","outputTextFirebaseObject","defaultTags","daDATA","daDATASNAP","editTitle","Title","shortcuts","shortcutName","getElementById","window","clipboardData","getData","open","editTopicPan","indexSelected","tagsSelected","tagsSelectedFireBase","Name","editTextStuff","homeCtrl","loadingService","openMenu","circle","classList","toggle","ham","main","preventDefault","stopImmediatePropagation","closeMenu","contains","remove","querySelector","querySelectorAll","win","addEventListener","goTo","loc","loadingCtrlfunc","currentAuthGet","subTitle","loaderLoc","href","newReplyCtrl","submitNewReply","numRepliesAlready","userAvatar","userName","userEmail","pushingR","replyCreatorUsername","replyCreatorEmail","markdownData","replyCreatorDate","now","Replynum","replyCreatorDateParsed","topicCreatorUsername","topicCreatorTitle","topicCreatorAvatar","topicCreatorSince","lastAct","dataLast","snapDataLastAct","LastActivity","snapREPVIEWS","RepliesNum","newTopicCtrl","emojiListService","logicToGoBack","isThereTag","tagCheckPrev","dataC","Default","undoAndRedo","opt","ready","Clipboard","submitNewTopic","search","pushing","IsAcceptedAnwser","Votes","AcceptedAnwserReplyNum","otherUserProfileCtrl","otherUserProfilePageService","otherUserService","obj","topicLenObj","precence","timeSinceNoPageOBJ","timeSinceNoPage","currentAuthGetOTHER","otherUserUID","otherUserUsername","ACTUALinfo","otherUserEmail","otherUserImage","numFollowing","numFollowers","otherMod","otherDesc","Description","count","topicData","timeSINCEOBJ","dataLOAD","OBJPRECENCE","presence","id","userRef","snapshotPrecence","goToPage","addFolower","followerCheck","followingCheck","dataCheckFollower","$id","$value","snap","Desc","dataCheckFollowing","snapp","privateMessageStart","mod","AVATAR","EMAIL","TITLE","VALUE","otherUserProfilePageCtrlFunc","otherUSERIDPAGE","profileCtrl","currentAuthGetPro","arrayOfPrevious5Days","newDate","dateNum","dateDiff5","index_zero","index_one","index_two","index_three","index_four","TOPICS_COUNT","index_zero_obj","COUNT","index_one_obj","index_two_obj","index_three_obj","index_four_obj","snapsnap","childSnao","parsed","Count","objPres","backImage","ProfileViews","Followers","Following","isPresent","settingsCtrl","isPassChange","currentAuthSet","userInfo","passwordSHARP","changeEmail","getElementsByTagName","wantsFullScreen","descriptonChange","changePassword","changeUsername","changeImage","topicCtrl","generateUUID","uuid","voteHelper","didVote","viewsCheck","snapshotViews","snapShotViewsForEach","childDataSNAPVIEWS","isCheckedHelper","returnerCheck","snapshotBestAnwserOutlineTopic","snapBest","isBestAnwser","replyNumber","liked","returner","snapshotLikeOutlineTopic","Like","VoteHelper","snapSHOT","Vote","notAuthReplyTopic","myAlert","EVEN","repliesNum","dateCheck","creatorDateParsed","actualReplyUser","thisUser","isModerator","currentUserAvatar","views","countViews","numChildren","votedAlready","upVote","upVoteIcon","add","downVoteIcon","downVote","countVote","votesViewing","snapshotVote","VoteChild","evenChildVote","childDataCHILD","replies","tagsTopic","snapDataTag","tagsTopicRep","goToProfile","editReply","reps","deletePost","confirm","warn","urlSHARINGCURRENT","openShareMenu","$mdOpenMenu","funcCheckEDIT","goBackTopic","isReplyable","isLikeable","isShareble","isFlaggable","isBookmarkable","isChecked","classBestAnwser","notChecked","checked","likeBoxNo","likeBoxYes","likeBox","likeBoxNoNgClick","likeBoxYesNgClick","Avarar","bookmarkBoxNo","bookmarkBoxYes","bookmarkBoxNoNgClick","bookmarkBoxYesNgClick","upVoteCheck","downVoteCheck","objBookmark","dataBook","snapap","bookMarkToggleTopic","bookmarkClickOutlineTopic","bookmarkClickNonOutlineTopic","editTopicPriv","flagSee","editTopic","canDeleteCheck","deleteTopicPriv","deleteTopic","snapshotTopic","replyTopic","authHomeCtrl","currentAuthGetHome","amOnline","onDisconnect","ServerValue","TIMESTAMP","onIdle","onAway","onBack","isIdle","isAway","setup","buttons","text","focus","prepare","setContent","onAuth","logout","goToSettings","descChangeCtrl","change","emailSettingsCtrl","changeEmailDialog","emailChange","oldEmail","emailChangeOld","newEmail","passwordChangeOld","imageChangeCtrl","uploadFile","doc","files","passwordChangeCtrl","changePasswordDialog","emailNormal","oldPassword","newPassword","passwordChangeNew","usernameChangeCtrl","changeUsernameDialog","usernameNew"],"mappings":"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","file":"app.min.js","sourcesContent":["angular.module('ForumApp')\r\n    .filter(\"dateFilter\", [\"timeService\", dateFilter]);\r\n\r\nfunction dateFilter(timeService){\r\n    return function(input){\r\n        return timeService.getTimeF(new Date(parseInt(input)));\r\n    };\r\n}","(function(angular){\n    \n    'use strict';\n    \nangular\n    .module('ForumApp' ,   [\n      //Deps\n        'ui.router',\n        'ngMaterial',\n        'firebase',\n        'ngMessages',\n        'material.svgAssetsCache',\n        'ngMdIcons',\n        'ngSanitize',\n        'vcRecaptcha',\n        'angularScreenfull',\n        'selectize',\n        '720kb.socialshare'\n    ]\n);\n\n\n/*\n                Release 1.1\n              ----------------\nPRODUCTION MODE DATABASE - https://uniquecoders.firebaseio.com/\nDEVELOPMENT MODE DATABASE - https://uniquecodersforums.firebaseio.com/\n\nTODO: CREATE HOSTING ENVIORMENT\n\n\nBACKEND\n--------\nAman\n------\nTODO : SHOW THE USERS AVATAR THAT LIKED THE REPLY. <- Dont know how to do that..\nTODO:Badges Backend\nTODO: Points \nTODO: @name and #topic\nTODO : OTHERUSERPROFILEPAGE\nTODO: Settings Oauth\nNasr\nKyle\n-----\nTODO : PRIVATE MESSAGE/PUBLIC\nTODO : FLAG = PRIVATE MESSAGING MODERATORS\nTODO : IMGUR CONVERSIOIN BASE64\nTODO : Notifications\n\nFRONTEND\n---------\n\nShim\n------\nTODO: NEWTOPIC.html, EDITTOPIC, and STUFF LIKE THAT FIX DO NOT FORGET TO Ask AMANUEL FOR MORE INFO PLZ\nTODO: 404 Page\nTODO: Online icon profile\nTODO: LOADING SCREEN.. <-- NEED TO FIX AND SHOW ME HOW TO MAKE RESPONSIVE\nTODO: Badges Front\nJeff\n-----\nTODO : DOCS .(LATER WE WILL PUT A GUIDE FOR COMPANIES TO USE THIS FORUM)\nTODO: 404 Page\nTODO: Online icon profile\nTODO: LOADING SCREEN.. <-- NEED TO FIX AND SHOW ME HOW TO MAKE RESPONSIVE\nTodo: badges Front\nALL Frontend\n-----------\n    \nTODO : FIX DESCRIPTON IN PROFILE PAGE\nTODO : RESELOUTION PROFILE AVATAR IN PROFILE PAGE\n\nTODO : Fix textbox so it is center\n\nBACKEND AND FRONTENDs\n---------------\nTODO: Add Drag Drop Image upload \nTODO: Add settings to Profile (Allow to open from)\nTODO: Downvote Best Answer\nTODO: AutoCorrect and Spell Check for editor http://www.javascriptspellcheck.com/\n\n-------LATER RELEASES IDEAS--------\n\nTODO : SESSIONS, for POEPLE TO WORK COLLABORATIVELY\nTODO : PYTHON INTERPRETOR : http://www.skulpt.org/ PHP: https://phpjs.hertzen.com/console.html. C++: https://ide.c9.io/amanuel2/ruby_interpreator_in_js#openfile-README.md\nTODO : TOURING\n\n\nHELPERS \n-----\nLAYOUTS \n------\nSETTINGS : http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2016/01/MD3.png\nForum MAterial : http://www.one-click-forum.com/live-preview/\nGoogle Forum Material : https://productforums.google.com/forum/#!topic/docs/FQVnUuzZusQ\n             ----------------\n*/\n\n\n})(angular);","angular.module('ForumApp')\n  .run(function($rootScope, $location, $state) {\n    $rootScope.$on(\"$routeChangeError\", function(event, next, previous, error) {\n      // We can catch the error thrown when the $requireAuth promise is rejected\n      // and redirect the user back to the home page\n      if (error === \"AUTH_REQUIRED\") {\n        $state.go(\"home\");\n      }\n    });\n  });\n","(function(angular) {\n  var app = angular.module('ForumApp');\n  app.config(['$stateProvider', '$urlRouterProvider','$mdThemingProvider', stateParams])\n\n  function stateParams($stateProvider, $urlRouterProvider,$mdThemingProvider) {\n\n$mdThemingProvider.theme(\"default\")\n                  .primaryPalette(\"blue\")\n      \n      \n    $urlRouterProvider.otherwise('404')\n    \n    $stateProvider.state('home', {\n      url: '',\n      templateUrl: 'app/components/home/home.html',\n      controller: 'homeCtrl',\n    })\n    $stateProvider.state('auth', {\n      url: '/auth',\n      templateUrl: 'app/components/auth/auth.html',\n      controller: 'authCtrl',\n    })\n\n    $stateProvider.state('authHome', {\n      url: '/authHome',\n      templateUrl: 'app/components/authHome/authHome.html',\n      controller: 'authHome',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n\n    $stateProvider.state('authHome.desc', {\n      url: '/desc',\n      templateUrl: 'app/components/authDesc/authDesc.html',\n      controller: 'authDescCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n        \"currentAuth\": [\"refService\", function(refService) {\n        }]\n      }\n    })\n\n    $stateProvider.state('authHome.topic', {\n      url: '/topic/:POST/:USERNAME',\n      templateUrl: 'app/components/topic/topicDesc.html',\n      controller: 'topicCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n    $stateProvider.state('authHome.profile', {\n      url: '/profile/:UID',\n      templateUrl: 'app/components/profile/profile.html',\n      controller: 'profileCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n\n  $stateProvider.state('authHome.settings', {\n      url: '/settings?UID?USERNAME',\n      templateUrl: 'app/components/settings/settings.html',\n      controller: 'settingsCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n    \n     $stateProvider.state('authHome.otherUser', {\n      url: '/otherUser?DATE?UID',\n      templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n      controller: 'otherUserProfileCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n    \n    $stateProvider.state('ErrorFourOFour', {\n      url: '/404',\n      templateUrl: 'app/components/404/404.html',\n      controller: '404Controller',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n    $stateProvider.state('loading', {\n      url:'/loading',\n      templateUrl:'app/components/loading/loading.html',\n      controller: 'loadingCtrl',\n       resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n    \n     $stateProvider.state('authHome.otherUserPage', {\n      url: '/:USERNAME/Activity',\n      templateUrl: 'app/components/otherUserProfilePage/otherUserProfilePage.html',\n      controller: 'otherUserProfilePageCtrl',\n      resolve: {\n        // controller will not be loaded until $waitForAuth resolves\n        // Auth refers to our $firebaseAuth wrapper in the example above\n      }\n    })\n  \n  \n  }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.directive('customOnChange', customOnChange);\n\n    function customOnChange(){\n        return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n          var onChangeHandler = scope.$eval(attrs.customOnChange);\n          element.bind('change', onChangeHandler);\n        }\n      };\n    }\n})(angular);\n","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.directive('otherUserCard', otherUserCard)\n\n    function otherUserCard() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                Moderator : '@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/otherUserCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }\n        }\n    }\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.directive('replyDateDirective', [\"timeService\",replyDirective])\r\n\r\n    function replyDirective(timeService){\r\n        return {\r\n            restrict:'E',\r\n            transclude:true,\r\n            template : \"<span><ng-transclude></ng-transclude></span>\",\r\n            link:function(scope, elm, attrs){\r\n                var elemzero = elm[0];\r\n                var dateNotParsed = elm[0].innerText;\r\n                console.log(\"DATE NOT PARSED\" , dateNotParsed)\r\n                var dateParsed = timeService.getTimeF(new Date(parseInt(dateNotParsed)))\r\n                //elemzero.innerText = dateParsed;\r\n            }\r\n        }\r\n    }\r\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.directive('userCardDirective', userCardDirective)\n\n    function userCardDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                name: '@',\n                theme: '@',\n                image : '@',\n                uid : '@',\n                email:'@',\n                desc:'@'\n            },\n            templateUrl: 'views/directiveViews/userCard.html',\n            link: function(scope, elem, attrs, ctrl) {\n\n            },\n            controller: function($scope) {\n                $scope.theme = $scope.theme || 'default'\n            }\n        }\n    }\n})(angular);","(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .filter('emoteFilter', ['$sce', emoteFilterfunc]);\n\n    function emoteFilterfunc($sce) {\n//EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n        function replace(string, str1, str2) {\n            return string.replace(\n                new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), 'g'),\n                str2\n            );\n        }\n        \n        function replaceAt(index,character){\n            return this.substr(0, index) \n                                + character \n                                + this.substr(\n                                                index + character.length\n                                             );\n        }\n\n        var emojieList = {\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            //No :text: for this Begin\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            //Done\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n        };\n\n        return function(string) {\n\n            if (typeof string === 'string') {\n\n                string = marked(string);\n\n                for (var emoji in emojieList) {\n                    if (emojieList.hasOwnProperty(emoji)) {\n                        string = replace(string, emoji, emojieList[emoji]);\n                    }\n                }\n\n                return $sce.trustAsHtml(string);\n            }\n\n        };\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n\n    app.filter(\"nonFullDateFilter\", [\"timeService\",nonFullDateFilterFunc]);\n\n    function nonFullDateFilterFunc(timeService){\n        return function(input){\n            return (((JSON.stringify((new Date(parseInt(input))))).replace('\"','')).substring(0,10))\n        }\n    }\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp');\r\n    \r\n    app.service('authCheckTrueService', [\"$state\" , authCheckService]);\r\n    \r\n    function authCheckService($state){\r\n        this.checkAuth = function(refService,dest){\r\n            if(refService.getAuth())\r\n                $state.go(dest);\r\n            else\r\n                return null;\r\n            \r\n        }\r\n    }\r\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp');\n\n    app.service('dateService', dateService)\n\n    function dateService() {\n        this.formatDate = function(date) {\n\n            switch (date) {\n                case (typeof date != 'object'):\n                    return null;\n                    break;\n\n                default:\n                    var year = date.getFullYear();\n                    var month = date.getUTCMonth();\n                    var day = date.getUTCDate();\n\n                    //month 2 digits\n                    month = (\"0\" + (month + 1)).slice(-2);\n\n                    //year 2 digits\n                    year = year.toString().substr(2, 2);\n\n                    var formattedDate = month + '/' + day + \"/\" + year;\n                      \n                      return formattedDate;\n\n            }\n\n\n\n        }\n    }\n})(angular);","(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('editReplyService', [editReplyService])\n    \n    function editReplyService(){\n        this.topicCreatorName = null;\n        this.nonParsedDate = null;\n        this.topicCreatorUID = null;\n        this.pushK = null;\n        \n        this.setInfo = function(push,name,date,uid){\n            this.topicCreatorName = name;\n            this.nonParsedDate = date;\n            this.topicCreatorUID = uid;\n            this.pushK = push;\n        }\n        this.getName = function(){\n            return (this.topicCreatorName);\n        }\n        \n        this.getDatee = function(){\n            return (this.nonParsedDate);\n        }\n        \n        this.getTopicUID = function(){\n            return (this.topicCreatorUID);\n        }\n        this.getPushK = function(){\n            return (this.pushK);\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('editTopicService', [ editTopicFuncService])\n    \n    function editTopicFuncService(){\n        this.dateCreated = null;\n        this.setDateCreated = function(value){\n            this.dateCreated = value;\n        }\n        this.getDateCreated = function(){\n            return (this.dateCreated);\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.service('emojiListService', [emojiListFunc]);\n    \n    function emojiListFunc(){\n        String.prototype.replaceAt=function(index, character) {\n            return this.substr(0, index) + character + this.substr(index+character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n        } \n        this.currentRenderEmojies = function(valRend) {\n             valRend = valRend.replaceAll(':)', 'views/assets/emoji/emoji-E056.png');\n        }\n    }\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('encodeImageToBase64',['replyService', encodeImageToBase64]);\n\n    function encodeImageToBase64(replyService) {\n\n        this.encode = function(document, file, ref, UID) {\n\n            if (file.length > 0) {\n                var fileToLoad = file[0];\n                var fileReader = new FileReader();\n\n                fileReader.onload = function(fileLoadedEvent) {\n                    var srcData = fileLoadedEvent.target.result; // <--- data: base64\n                    ref.child(\"UserAuthInfo\").child(UID).update({\n                        Image: srcData\n                    })\n                    //Updating Topics\n                    ref.child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == UID) {\n                                ref.child(\"Topics\").child(childData.pushKey).update({\n                                    Avatar: srcData\n                                })\n                            }\n                        })\n                    })\n                    \n                    ref.child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            //ID NESTING\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == UID){\n                                    //JackPot\n                                   console.log(key)\n                                   console.log(childDataNest.pushKey)\n                                  ref.child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorAvatar : srcData                   \n                                    })\n                                }\n                            })\n                            //ref.child(\"Replies\").child()\n                        })\n                    })\n                    return srcData;\n                }\n\n                fileReader.readAsDataURL(fileToLoad);\n            }\n\n        }\n\n    }\n})(angular);","(function(angular){\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('letterAvatarService', ['$http',letterAvatarServiceFunc])\n    \n    function letterAvatarServiceFunc($http){\n        \n        this.letters = {\n\t\"letters\": {\n\n\t\t\"a\": {\n\t\t\t\"letter\": \"A\",\n\t\t\t\"URL\": \"http://imgur.com/fmJfhIO.png\"\n\t\t},\n\n\t\t\"b\": {\n\t\t\t\"letter\": \"B\",\n\t\t\t\"URL\": \"http://imgur.com/TAZ9VPU.png\"\n\t\t},\n\n\t\t\"c\": {\n\t\t\t\"letter\": \"C\",\n\t\t\t\"URL\": \"http://imgur.com/yyxf8Xa.png\"\n\t\t},\n\n\t\t\"d\": {\n\t\t\t\"letter\": \"D\",\n\t\t\t\"URL\": \"http://imgur.com/t3WVsh0.png\"\n\t\t},\n\n\t\t\"e\": {\n\t\t\t\"letter\": \"E\",\n\t\t\t\"URL\": \"http://imgur.com/Pe4sgjI.png\"\n\t\t},\n\n\t\t\"f\": {\n\t\t\t\"letter\": \"F\",\n\t\t\t\"URL\": \"http://imgur.com/6T8Bgeq.png\"\n\t\t},\n\t\t\"g\": {\n\t\t\t\"letter\": \"G\",\n\t\t\t\"URL\": \"http://imgur.com/BGsTWtG.png\"\n\t\t},\n\t\t\"h\": {\n\t\t\t\"letter\": \"H\",\n\t\t\t\"URL\": \"http://imgur.com/o5K40Jd.png\"\n\t\t},\n\t\t\"i\": {\n\t\t\t\"letter\": \"I\",\n\t\t\t\"URL\": \"http://imgur.com/sdt7apQ.png\"\n\t\t},\n\t\t\"j\": {\n\t\t\t\"letter\": \"J\",\n\t\t\t\"URL\": \"http://imgur.com/msHLCHR.png\"\n\t\t},\n\t\t\"k\": {\n\t\t\t\"letter\": \"K\",\n\t\t\t\"URL\": \"http://imgur.com/eoAJeWD.png\"\n\t\t},\n\t\t\"l\": {\n\t\t\t\"letter\": \"L\",\n\t\t\t\"URL\": \"http://imgur.com/zMVTSnK.png\"\n\t\t},\n\t\t\"m\": {\n\t\t\t\"letter\": \"M\",\n\t\t\t\"URL\": \"http://imgur.com/IDCb4on.png\"\n\t\t},\n\t\t\"n\": {\n\t\t\t\"letter\": \"N\",\n\t\t\t\"URL\": \"http://imgur.com/8AxVHBb.png\"\n\t\t},\n\t\t\"o\": {\n\t\t\t\"letter\": \"O\",\n\t\t\t\"URL\": \"http://imgur.com/cTdwHBz.png\"\n\t\t},\n\t\t\"p\": {\n\t\t\t\"letter\": \"P\",\n\t\t\t\"URL\": \"http://imgur.com/l92WBfJ.png\"\n\t\t},\n\t\t\"q\": {\n\t\t\t\"letter\": \"Q\",\n\t\t\t\"URL\": \"http://imgur.com/R2NdDC0.png\"\n\t\t},\n\t\t\"r\": {\n\t\t\t\"letter\": \"R\",\n\t\t\t\"URL\": \"http://imgur.com/TRBbK6s.png\"\n\t\t},\n\t\t\"s\": {\n\t\t\t\"letter\": \"S\",\n\t\t\t\"URL\": \"http://imgur.com/Yg5pCrN.png\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"letter\": \"T\",\n\t\t\t\"URL\": \"http://imgur.com/t44cYPo.png\"\n\t\t},\n\t\t\"u\": {\n\t\t\t\"letter\": \"U\",\n\t\t\t\"URL\": \"http://imgur.com/rwe2jHk.png\"\n\t\t},\n\t\t\"v\": {\n\t\t\t\"letter\": \"V\",\n\t\t\t\"URL\": \"http://imgur.com/tEuWVjS.png\"\n\t\t},\n\t\t\"w\": {\n\t\t\t\"letter\": \"W\",\n\t\t\t\"URL\": \"http://imgur.com/4YrkhS9.png\"\n\t\t},\n\t\t\"x\": {\n\t\t\t\"letter\": \"X\",\n\t\t\t\"URL\": \"http://imgur.com/rdCCRVK.png\"\n\t\t},\n\t\t\"y\": {\n\t\t\t\"letter\": \"Y\",\n\t\t\t\"URL\": \"http://imgur.com/IZLfNSA.png\"\n\t\t},\n\t\t\"z\": {\n\t\t\t\"letter\": \"Z\",\n\t\t\t\"URL\": \"http://imgur.com/qarqErq.png\"\n\t\t}\n\n\t},\n\n\t\"numbers\": {\n\n\t\t\"0\": {\n\t\t\t\"number\": \"0\",\n\t\t\t\"URL\": \"http://imgur.com/1rkedvr.png\"\n\t\t},\n\t\t\"1\": {\n\t\t\t\"number\": \"1\",\n\t\t\t\"URL\": \"http://imgur.com/WqINV9y.png\"\n\t\t},\n\t\t\"2\": {\n\t\t\t\"number\": \"2\",\n\t\t\t\"URL\": \"http://imgur.com/ILrgc45.png\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"number\": \"3\",\n\t\t\t\"URL\": \"http://imgur.com/hO7ULVQ.png\"\n\t\t},\n\t\t\"4\": {\n\t\t\t\"number\": \"4\",\n\t\t\t\"URL\": \"http://imgur.com/7lSq5mn.png\"\n\t\t},\n\t\t\"5\": {\n\t\t\t\"number\": \"5\",\n\t\t\t\"URL\": \"http://imgur.com/7DhaPD3.png\"\n\t\t},\n\t\t\"6\": {\n\t\t\t\"number\": \"6\",\n\t\t\t\"URL\": \"http://imgur.com/vQigaLy.png\"\n\t\t},\n\t\t\"7\": {\n\t\t\t\"number\": \"7\",\n\t\t\t\"URL\": \"http://imgur.com/Mq1EyLj.png\"\n\t\t},\n\t\t\"8\": {\n\t\t\t\"number\": \"8\",\n\t\t\t\"URL\": \"http://imgur.com/fqL6zzY.png\"\n\t\t},\n\t\t\"9\": {\n\t\t\t\"number\": \"9\",\n\t\t\t\"URL\": \"http://imgur.com/aeHrAeS.png\"\n\t\t}\n\n\t},\n\n\t\"Mystery\": \"http://imgur.com/mM5vPqB.png\"\n};\n          \n            \n            \n        this.loadJSON = function(){\n            $http.get('services/assets/json/letterJSON.json').then(function(value) {\n                this.letters = value.data\n            })\n        }    \n        \n        this.logLetter = function(){\n            console.log(this.letters);\n        }\n        this.getLetterURL = function(string,loaderData){\n            \n                  var char = string.charAt(0);\n                    var len = 0;\n                    var lenNum = 0;\n                    var URLVALUE = '';\n                    \n                    for(var i in this.letters.letters){\n                        len++;\n                        if(i == (char.toLowerCase())){\n                            URLVALUE = this.letters.letters[i].URL;\n                        }\n                    }\n                    \n                    for(var i in this.letters.numbers){\n                        lenNum++;\n                        if(i == (char)){\n                            URLVALUE = this.letters.numbers[i].URL;\n                        }\n                    }\n                    \n                    if(!URLVALUE){\n                        URLVALUE = this.letters.Mystery\n                    }\n                    \n                    return URLVALUE;\n            \n            \n            \n\n        }    \n    \n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.service('loadingService', [loadingServiceFunc])\n    \n    function loadingServiceFunc() {\n        this.loadingTo = null;\n        this.setLoadingTo = function(value) {\n            this.loadingTo = value;\n        }\n        this.getLoadingTo = function() {\n            return (this.loadingTo);\n        }\n    }\n})(angular);","(function(){\n    var app = angular.module('ForumApp')\n    \n    app.service('otherUserProfilePageService', [otherUserProfilePageServicefunc])\n    \n    function otherUserProfilePageServicefunc(){\n        this.otherUserID = ''\n        \n        this.setID = function(ID){\n            this.otherUserID = ID;\n        }\n        \n        this.getID = function(){\n            return (this.otherUserID);\n        }\n    }\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('otherUserService', [refService])\n    \n    function refService(){\n        this.otherUserInfo = null;\n        this.otherACTUALINFO = null;\n        this.setUserInfo = function(info){\n            this.otherUserInfo = info;\n        }\n        this.getUserInfo = function(){\n            return (this.otherUserInfo);\n        }\n        this.ACTUALsetUserInfo = function(info){\n            this.otherACTUALINFO = info;\n        }\n        this.ACTUALgetUserInfo = function(){\n            return (this.otherACTUALINFO);\n        }\n    }\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n\n    app.service('refService', [\"$firebaseAuth\",refService])\n    \n    function refService($firebaseAuth){\n        this.ref = function() {\n            return new Firebase('https://uniquecodersforums.firebaseio.com/');\n        }\n        this.refAuth = function() {\n            return $firebaseAuth(this.ref());\n        }\n    \n    }\n})(angular);","(function(angular){\n    'use strict';\n    \n    var app = angular.module('ForumApp')\n    \n    app.service('replaceService', [replaceServicefunc])\n    \n    function replaceServicefunc(){\n        this.replaceAllString = function(str1, str2, ignore) {\n                 return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n            } \n    }\n})(angular);","(function(angular){\r\n    var app = angular.module('ForumApp')\r\n\r\n    app.service('replyService', [replyService])\r\n    function replyService(){\r\n        this.topicTitle = \"\";\r\n        this.creatorTitle = \"\";\r\n        this.creatorUID = \"\"\r\n        this.creatorUsername = \"\"\r\n        this.creatorValue = \"\"\r\n        this.creatorDate = \"\"\r\n        this.creatorAvatar = \"\";\r\n        this.creatorEmail = \"\"\r\n        this.timeSinceCreated = \"\";\r\n        this.postNum = \"\"\r\n        this.setTopicInfo = function(title,creator,uid,username,value,date,email,since,avatar,postNum){\r\n            this.topicTitle = title;\r\n            this.creatorTitle = creator;\r\n            this.creatorUID = uid;\r\n            this.creatorUsername = username;\r\n            this.creatorValue = value;\r\n            this.creatorDate = date;\r\n            this.creatorEmail = email;\r\n            this.timeSinceCreated = since;\r\n            this.creatorAvatar = avatar;\r\n            this.postNum = postNum;\r\n            return title,creator,uid,username,value,date,email,since;\r\n        }\r\n        this.getTopicInfo = function () {\r\n            return this.topicTitle,this.creatorTitle,\r\n                   this.creatorUID,this.creatorUsername,\r\n                   this.creatorValue,this.creatorDate,\r\n                   this.creatorEmail,this.timeSinceCreated\r\n                   this.creatorAvatar,this.postNum;\r\n        }\r\n    }\r\n})(angular);","(function(angular) {\n    var app = angular.module('ForumApp')\n    app.service('timeService', [timeService])\n\n    function timeService() {\n        this.getTimeF = function(time) {\n            switch (typeof time) {\n                case 'number':\n                    break;\n                case 'string':\n                    time = +new Date(time);\n                    break;\n                case 'object':\n                    if (time.constructor === Date) time = time.getTime();\n                    break;\n                default:\n                    time = +new Date();\n            }\n            var time_formats = [\n                [60, 'seconds', 1], // 60\n                [120, '1 min ago', '1 min from now'], // 60*2\n                [3600, 'min', 60], // 60*60, 60\n                [7200, '1h ago', '1h from now'], // 60*60*2\n                [86400, 'h', 3600], // 60*60*24, 60*60\n                [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n                [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n                [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n                [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n                [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n                [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n                [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n                [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n                [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n                [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n            ];\n            var seconds = (+new Date() - time) / 1000,\n                token = 'ago',\n                list_choice = 1;\n\n            if (seconds == 0) {\n                return 'Just now'\n            }\n            if (seconds < 0) {\n                seconds = Math.abs(seconds);\n                token = 'from now';\n                list_choice = 2;\n            }\n            var i = 0,\n                format;\n            while (format = time_formats[i++])\n                if (seconds < format[0]) {\n                    if (typeof format[2] == 'string')\n                        return format[list_choice];\n                    else\n                        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n                }\n            return time;\n        }\n\n        this.getTimeS = function(date) {\n\n            var seconds = Math.floor((new Date() - date) / 1000);\n\n            var interval = Math.floor(seconds / 31536000);\n\n            if (interval > 1) {\n                return interval + \" years\";\n            }\n            interval = Math.floor(seconds / 2592000);\n            if (interval > 1) {\n                return interval + \" months\";\n            }\n            interval = Math.floor(seconds / 86400);\n            if (interval > 1) {\n                return interval + \" days\";\n            }\n            interval = Math.floor(seconds / 3600);\n            if (interval > 1) {\n                return interval + \" hours\";\n            }\n            interval = Math.floor(seconds / 60);\n            if (interval > 1) {\n                return interval + \" minutes\";\n            }\n            return Math.floor(seconds) + \" seconds\";\n        }\n    }\n})(angular);","(function(angular){\n   \n   'use strict';\n   \nangular\n\n   .module('ForumApp')\n   .controller('404Controller', [\"$scope\", ErrControllerFunc])\n   \n   function ErrControllerFunc($scope){\n       \n   }\n    \n})(angular);","(function(angular) {\n\n    'use strict';\n    \n    angular\n            .module('ForumApp')\n            .controller('authCtrl', [\"$scope\", \"$state\", \"refService\", \"$firebaseObject\", \"authCheckTrueService\", \"$firebaseArray\", \"$http\", \"$mdDialog\", \"letterAvatarService\", authCtrl]);\n\n    function authCtrl($scope, $state, refService, $firebaseObject, authCheckTrueService, $firebaseArray, $http, $mdDialog, letterAvatarService) {\n        $scope.loadImageJSON = 'NOTLOADED';\n        authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n        function PASSWORDRESET(length) {\n            var possibleChars = ['abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!?_-'];\n            var password = '';\n            for (var i = 0; i < length; i += 1) {\n                password += possibleChars[Math.floor(Math.random() * possibleChars.length)];\n            }\n            return password;\n        }\n\n\n        $scope.toggleClass = function() {\n            $scope.enabled = true;\n        }\n        $scope.close = function() {\n            $scope.enabled = false;\n        }\n\n\n        $scope.forgotPass = function() {\n            alertify.prompt(\n                'Recover Password',\n                'Enter Email Of Account',\n                function(evt, value) {\n                    refService.ref().resetPassword({\n                        email: value\n                    }, function(error) {\n                        if (error) {\n                            switch (error.code) {\n                                case \"INVALID_USER\":\n                                    alertify.error(\"The specified user account does not exist.\");\n                                    break;\n                                default:\n                                    alertify.error(\"Error resetting password:\" + error);\n                            }\n                        }\n                        else {\n                            alertify.success(\"Password reset email sent successfully!\");\n                        }\n                    });\n                }\n            );\n        }\n        \n         $scope.oAuthLogin = function(provider) {\n\n            refService.ref().authWithOAuthPopup(provider, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Log in Failed. See Console for more details\");\n                    console.error(\"ERROR LOGIN : \" + error);\n                    refService.ref().unauth();\n                }\n                else {\n\n                    var usernames = $firebaseArray(refService.ref().child(\"UserAuthInfo\"));\n                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).once(\"value\", function(snapLog) {\n\n                        if (snapLog.val() == null) {\n                            // alertify.error(\"You Havent Signed Up With That Provider! Try Registering That Provider First!\");\n                            vex.dialog.prompt({\n                                message: 'What Email Do you want?',\n                                placeholder: 'Email...',\n                                callback: function(email) {\n\n                                    usernames.$loaded(function(data) {\n                                        for (var i = 0; i < data.length; i++) {\n\n                                            if (data[i].Username == authData[provider].username) {\n                                                $scope.isDupe = true;\n                                                break;\n                                            }\n                                        }\n\n                                        if ($scope.isDupe != true) {\n\n                                            refService.ref().createUser({\n                                                email: email,\n                                                password: PASSWORDRESET(16)\n                                            }, function(error, userData) {\n                                                if (error) {\n                                                    switch (error.code) {\n                                                        case \"EMAIL_TAKEN\":\n                                                            alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                            break;\n                                                        case \"INVALID_EMAIL\":\n                                                            alertify.error(\"The specified email is not a valid email.\");\n                                                            break;\n                                                        default:\n                                                            alertify.error(\"Error creating user:\", error);\n                                                    }\n                                                }\n                                                else {\n\n                                                    if (provider == 'twitter' || provider == 'google') {\n\n                                                        if (provider == 'google') {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].displayName,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                        else {\n                                                            refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                Username: authData[provider].username,\n                                                                Email: email,\n                                                                UID: authData.uid,\n                                                                Image: authData[provider].profileImageURL,\n                                                                Moderator: false,\n                                                                BronzeBadge: 0,\n                                                                SilverBadge: 0,\n                                                                GoldBadge: 0,\n                                                                PlatinumBadge: 0,\n                                                                newUser: true,\n                                                                profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                followers: 0,\n                                                                following: 0,\n                                                                profileViews: 0,\n                                                                Precence: -1,\n                                                            })\n                                                            alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                            refService.ref().unauth();\n                                                        }\n                                                    }\n                                                    else {\n                                                        refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                            Username: authData[provider].username,\n                                                            Email: email,\n                                                            UID: authData.uid,\n                                                            Image: authData[provider].profileImageURL,\n                                                            Moderator: false,\n                                                            BronzeBadge: 0,\n                                                            SilverBadge: 0,\n                                                            GoldBadge: 0,\n                                                            PlatinumBadge: 0,\n                                                            newUser: true,\n                                                            profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                            followers: 0,\n                                                            following: 0,\n                                                            profileViews: 0,\n                                                            Precence: -1,\n                                                        })\n                                                        alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                        refService.ref().unauth();\n                                                    }\n\n\n                                                }\n                                            })\n\n                                        }\n                                        else {\n\n                                            vex.dialog.prompt({\n                                                message: 'Username is a duplicate. Please Choose another one.',\n                                                placeholder: 'Username..',\n                                                callback: function(username) {\n                                                    for (var i = 0; i < data.length; i++) {\n\n                                                        if (data[i].Username == username) {\n                                                            $scope.isUsernameDupeNested = true;\n                                                            break;\n                                                        }\n                                                    }\n\n                                                    if ($scope.isUsernameDupeNested == false) {\n                                                        refService.ref().createUser({\n                                                            email: email,\n                                                            password: PASSWORDRESET(16)\n                                                        }, function(error, userData) {\n                                                            if (error) {\n                                                                switch (error.code) {\n                                                                    case \"EMAIL_TAKEN\":\n                                                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                                                        break;\n                                                                    case \"INVALID_EMAIL\":\n                                                                        alertify.error(\"The specified email is not a valid email.\");\n                                                                        break;\n                                                                    default:\n                                                                        alertify.error(\"Error creating user:\", error);\n                                                                }\n                                                            }\n                                                            else {\n\n                                                                if (provider == 'google') {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].displayName,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: 'http://cine.nl/wp-content/uploads/2015/07/the-revenant-trailer.jpg',\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n                                                                else {\n                                                                    refService.ref().child(\"UserAuthInfo\").child(authData.uid).set({\n                                                                        Username: authData[provider].username,\n                                                                        Email: email,\n                                                                        UID: authData.uid,\n                                                                        Image: authData[provider].profileImageURL,\n                                                                        Moderator: false,\n                                                                        BronzeBadge: 0,\n                                                                        SilverBadge: 0,\n                                                                        GoldBadge: 0,\n                                                                        PlatinumBadge: 0,\n                                                                        newUser: true,\n                                                                        profileBackground: authData[provider].cachedUserProfile.profile_background_image_url_https,\n                                                                        followers: 0,\n                                                                        following: 0,\n                                                                        profileViews: 0,\n                                                                        Precence: -1,\n                                                                    })\n                                                                    alertify.success(\"Sucessfully Reistered. Login Now!\");\n                                                                    refService.ref().unauth();\n                                                                }\n\n                                                            }\n                                                        })\n                                                    }\n                                                    else {\n                                                        alertify.error(\"The username you entered is another dupe... Refresh will be made soon. Please Give a Unique Username next time you register.\")\n                                                        refService.ref().unauth();\n                                                        setTimeout(function() {\n                                                            location.reload(true);\n                                                        }, 10000)\n                                                    }\n\n\n\n                                                }\n                                            })\n\n\n\n                                        }\n                                    });\n\n\n                                }\n\n\n                            })\n\n\n\n                        }\n                        else {\n\n                            alertify.success(\"Sucessfully Logged In!\");\n                            $state.go('authHome.desc');\n\n                        }\n\n                    })\n\n\n\n                }\n            });\n        }\n        $scope.loginAUTH = function() {\n            refService.ref().authWithPassword({\n                \"email\": $scope.user.email,\n                \"password\": $scope.user.password\n            }, function(error, authData) {\n                if (error) {\n                    alertify.error(\"Unsucessfull Authentication. See console for details\")\n                    console.error(error);\n                }\n                else {\n                    alertify.success(\"Sucessfull Authentication\");\n                    $state.go('authHome')\n                }\n            });\n        }\n\n\n\n        $scope.regissterForm = function() {\n\n            $scope.isUsernameDupe = false;\n            refService.ref().child(\"UserAuthInfo\").on(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSNap) {\n\n                    var key = childSNap.key();\n                    var childData = childSNap.val();\n\n                    if (childData.Username == $scope.register.username) {\n                        $scope.isUsernameDupe = true;\n                        return;\n                    }\n                })\n                if (($scope.isUsernameDupe != true)) {\n                    if ($scope.isUsernameDupe == false) {\n                        refService.ref().createUser({\n                            email: $scope.register.email,\n                            password: $scope.register.password\n                        }, function(error, userData) {\n                            if (error) {\n                                switch (error.code) {\n                                    case \"EMAIL_TAKEN\":\n                                        alertify.error(\"The new user account cannot be created because the email is already in use.\");\n                                        break;\n                                    case \"INVALID_EMAIL\":\n                                        alertify.error(\"The specified email is not a valid email.\");\n                                        break;\n                                    default:\n                                        alertify.error(\"Error creating user:\", error);\n                                }\n                            }\n                            else {\n                                $scope.$evalAsync(\n                                    function() {\n                                        var letterAvatar = letterAvatarService.getLetterURL($scope.register.username, $scope.loadImageJSON);\n                                        setTimeout(function() {\n                                            console.log(letterAvatar);\n                                            refService.ref().child(\"UserAuthInfo\").child(userData.uid).set({\n                                                Username: $scope.register.username,\n                                                Email: $scope.register.email,\n                                                UID: userData.uid,\n                                                Image: letterAvatarService.getLetterURL($scope.register.username),\n                                                Moderator: false,\n                                                BronzeBadge: 0,\n                                                SilverBadge: 0,\n                                                GoldBadge: 0,\n                                                PlatinumBadge: 0,\n                                                newUser: true,\n                                                profileBackground: 'http://rmdeaftheatre.com/wp-content/uploads/2012/11/gray-background-3.jpg',\n                                                followers: 0,\n                                                following: 0,\n                                                profileViews: 0,\n                                                Precence: -1,\n                                            });\n\n                                        }, 1500)\n\n                                        alertify.success(\"Sucessfully Registered\")\n                                    }\n                                );\n\n                            }\n                        });\n                    }\n\n                }\n                else {\n                    alertify.error(\"Username already in use. If you see a green sign above saying You sucessfully registered. Dont worry about this\");\n                }\n            })\n\n\n\n\n        }\n\n        $scope.setResponse = function() {\n\n            $mdDialog.show(\n                $mdDialog.alert()\n                .clickOutsideToClose(true)\n                .title('Sucess')\n                .textContent('Recaptcha Submited Sucessfully')\n                .ariaLabel('Offscreen Demo')\n                .ok('Redirecting...')\n                .openFrom({\n                    top: -50,\n                    width: 30,\n                    height: 80\n                })\n                .closeTo({\n                    left: 1500\n                })\n            );\n            setTimeout(function() {\n                $mdDialog.cancel();\n            }, 1000);\n        }\n\n    }\n\n})(angular);","(function(angular) {\n    \n    'use strict';\n    \n    angular\n           .module('ForumApp')\n           .controller('authDescCtrl', [\"$scope\", \"dateFilter\", \"$mdDialog\", \"$state\", \"$mdMedia\", \"$mdBottomSheet\", \"$firebaseObject\", \"refService\", \"$timeout\", \"$firebaseArray\", authDescCtrl])\n\n    function authDescCtrl($scope, dateFilter, $mdDialog, $state, $mdMedia, $mdBottomSheet, $firebaseObject, refService, $timeout, $firebaseArray) {\n\n        $scope.authDataDesc = refService.ref().getAuth();\n\n        $scope.topic = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.topicName = $firebaseArray(refService.ref().child(\"Topics\"))\n        $scope.topicViewsLen = [];\n\n\n        //Setting Views\n        $scope.topicName.$loaded(function(data) {\n            data.forEach(function(dataChild) {\n                var x = dataChild.Views;\n                var len = 0;\n                for (var i in dataChild.Views) {\n                    len++;\n                }\n                $scope.topicViewsLen.push(len);\n            })\n            var times = 0;\n            data.forEach(function(dataChild) {\n                refService.ref().child(\"Topics\").child(dataChild.pushKey).update({\n                    ViewsLen: $scope.topicViewsLen[times]\n                })\n                times++;\n \n            })\n        })\n        \n        function bookmarked(rep){\n            var returne = \"False\"\n                refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                        snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if(bookchildData.Bookmarks[$scope.authDataDesc.uid].Bookmark == true)\n                                    returne = \"True\"\n                                    \n                        })\n                })\n            return returne;\n        }\n        \n        $scope.bookmarked = function(rep){\n            if($scope.authDataDesc == null){\n                return false;\n            }\n            else{\n                if(bookmarked(rep) == \"True\")\n                    return true;\n                else\n                    return false;\n            }\n        }\n\n        $scope.goToPerson = function(person, event) {\n            $mdDialog.show(\n                $mdDialog.alert()\n                .title('Navigating')\n                .textContent('Inspect ' + person)\n                .ariaLabel('Person inspect demo')\n                .ok('Neat!')\n                .targetEvent(event)\n            );\n        };\n        \n         $scope.loadUsers = function(topic) {\n            // Use timeout to simulate a 650ms request.\n            return $timeout(function() {\n                $scope.tagsOption = topic.Tags;\n            }, 650);\n        };\n\n\n\n        $scope.showNewTopic = function(ev) {\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdBottomSheet.show({\n                    controller: 'newTopicCtrl',\n                    templateUrl: 'app/components/newTopic/newTopic.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                }).then(function(clickedItem) {\n                    $scope.alert = clickedItem['name'] + ' clicked!';\n                });\n\n            } else {\n\n\n            }\n        }\n\n        $scope.goToTOPICAUTCOMPLETE = function(info) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": info.Username,\n                \"POST\": info.Postnum\n            })\n        }\n        $scope.goToTopic = function(avatar, date, email, title, uid, username, value, postnum) {\n            $state.go(\"authHome.topic\", {\n                \"USERNAME\": username,\n                \"POST\": postnum\n            })\n\n        }\n\n\n    }\n})(angular);","(function(angular){\n    \n    'use strict';\n    \n    angular\n            .module('ForumApp')\n            .controller('editReplyCtrl', [\"$scope\",\"$mdDialog\",\"currentAuth\",\"refService\",\"editTopicService\",\"editReplyService\", editReplyFunc])\n    \n    function editReplyFunc($scope,$mdDialog,currentAuth,refService,editTopicService,editReplyService){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n        \n         marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = {\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            //No :text: for this Begin\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            //Done\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n        }\n         $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n        $scope.$watch('editValue', function(current, original) {\n\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n        \n        $scope.editREPLY = function(){\n            var topicPushKey = editReplyService.getPushK();\n            var POST = editReplyService.getDatee();\n            var USERNAME = editReplyService.getName();\n            var UIDUSERNAME = editReplyService.getTopicUID();\n            \n            \n            refService.ref().child(\"Replies\").child(USERNAME+POST).on(\"value\", function(snapshot){\n                snapshot.forEach(function(childSnap){\n                    var key = childSnap.key();\n                    var childData = childSnap.val();\n                    if(childData.pushKey == topicPushKey){\n                        refService.ref().child(\"Replies\").child(USERNAME+POST).child(childData.pushKey).update({\n                            replyCreatorValue : $scope.editValue\n                        })\n                    }\n                })\n            })\n            \n        }\n\n    }\n    \n})(angular);","(function(angular){\n    'use strict';\n    angular\n            .module('ForumApp')\n            .controller('editTopicCtrl', [\"$scope\",\"$mdDialog\",\"currentAuth\",\"refService\",\"editTopicService\", editTopicFunc])\n    \n    function editTopicFunc($scope,$mdDialog,currentAuth,refService,editTopicService){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.submitNewEdit = function(){\n            var newSentence = $scope.edit.sentence;\n            refService.ref().child(\"Topics\").on(\"value\", function(snapshot){\n                snapshot.forEach(function(childSnapshot){\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    var DATE = editTopicService.getDateCreated();\n                   if(childData.UID == currentAuth.uid && childData.DateCreated == DATE){\n                       refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                           Value: newSentence\n                       })\n                   }\n                })\n                $mdDialog.cancel();\n            })\n        }\n\n    }\n    \n})(angular);","(function(angular) {\n    'use strict';\n\n    angular\n        .module('ForumApp')\n        .controller('editTopicPanelCtrl', ['$scope', 'refService', '$firebaseObject', '$stateParams', '$firebaseArray', '$mdDialog', editTopicPanelCtrlfunc]);\n\n    function editTopicPanelCtrlfunc($scope, refService, $firebaseObject, $stateParams, $firebaseArray, $mdDialog) {\n        String.prototype.replaceAt = function(index, character) {\n            return this.substr(0, index) + character + this.substr(index + character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, \"\\\\$&\"), (ignore ? \"gi\" : \"g\")), (typeof(str2) == \"string\") ? str2.replace(/\\$/g, \"$$$$\") : str2);\n        }\n\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        }\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n        $scope.emojieList = {\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            //No :text: for this Begin\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            //Done\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n        }\n\n\n        $scope.outputTextFirebaseObject = $firebaseObject(refService.ref().child(\"Topics\"))\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n        $scope.outputTextFirebaseObject.$loaded(function(daDATA) {\n            for (var prop in daDATA) {\n                if (daDATA[prop] !== null) {\n                    if (daDATA[prop].Postnum == $stateParams.POST) {\n                        refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).once(\"value\", function(daDATASNAP) {\n                            $scope.editTitle = daDATASNAP.val().Title\n                            $scope.editValue = daDATASNAP.val().Value;\n                        })\n\n                    }\n                }\n            }\n        })\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n        $scope.$watch('editValue', function(current, original) {\n\n            $scope.outputText = marked(current);\n            //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n            for (var prop in $scope.emojieList)\n                $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]);\n        });\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n ----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n\n        $scope.editTopicPan = function() {\n            var indexSelected = $scope.tagsSelected;\n             $scope.tagsSelectedFireBase = [];\n            //$scope.defaultTags\n            for (var i = 0; i < indexSelected.length; i++) {\n                $scope.tagsSelectedFireBase.push($scope.defaultTags[indexSelected[i]].Name)\n            }\n            $scope.editTextStuff = $firebaseObject(refService.ref().child(\"Topics\"))\n            $scope.editTextStuff.$loaded(function(daDATA) {\n                for (var prop in daDATA) {\n                    if (daDATA[prop] !== null) {\n                        if (daDATA[prop].Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(daDATA[prop].pushKey).update({\n                                Value : $scope.editValue,\n                                Title : $scope.editTitle,\n                                Tags : $scope.tagsSelectedFireBase\n                            })\n                        }\n                    }\n                }\n                $mdDialog.cancel();\n            })\n\n        }\n    }\n\n})(angular);","(function(angular) {\n\n  'use strict';\n  \n  angular\n        .module('ForumApp')\n        .controller('homeCtrl', [\"$scope\", \"$state\", \"refService\",\"loadingService\", homeCtrl])\n\n  function homeCtrl($scope, $state, refService,loadingService) {\n    //var checkAuth = refService.ref().getAuth() ? $state.go(\"authHome.desc\") : console.log(\"Not Logged In\");\n    // authCheckTrueService.checkAuth(refService.ref(), \"authHome.desc\");\n\n    var circle = document.querySelector('.material-btn');\n    var link = document.querySelector('.material-content').querySelectorAll('li');\n    var ham = document.querySelector('.material-hamburger');\n    var main = document.querySelector('main');\n    var win = window;\n\n    function openMenu(event) {\n\n      circle.classList.toggle('active');\n      ham.classList.toggle('material-close');\n      main.classList.toggle('active');\n      for (var i = 0; i < link.length; i++) {\n        link[i].classList.toggle('active');\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n\n    function closeMenu() {\n      if (circle.classList.contains('active')) {\n        circle.classList.remove('active');\n        for (var i = 0; i < link.length; i++) {\n          link[i].classList.toggle('active');\n        }\n        ham.classList.remove('material-close');\n        main.classList.remove('active');\n      }\n    }\n\n    circle.addEventListener('click', openMenu, false);\n\n    win.addEventListener('click', closeMenu, false);\n\n\n  $scope.goTo = function(loc) {\n    loadingService.setLoadingTo(loc);\n    $state.go('loading')\n  }\n\n  }\n\n})(angular);","(function(angular){\n\n  'use strict';    \n    \n  angular\n      .module('ForumApp')\n      .controller('loadingCtrl', [\"$scope\",'$state','refService','loadingService', loadingCtrlfunc])\n    \n    function loadingCtrlfunc($scope,$state,refService,loadingService){\n        $scope.currentAuthGet = refService.ref().getAuth();\n        $scope.title = \"Ng-Forum\";\n        $scope.subTitle = \"Loading...\";\n         setTimeout(function(){\n             var loaderLoc = loadingService.getLoadingTo();\n             if(loaderLoc) \n                $state.go(loaderLoc)\n             else\n                window.location.href = ''\n         },3500)\n    }\n})(angular);","(function(angular) {\r\n'use strict';\r\n    angular\r\n        .module('ForumApp')\r\n        .controller('newReplyCtrl', [\"$scope\", \"$firebaseObject\", \"$mdDialog\", \"refService\", \"currentAuth\", \"replyService\", \"timeService\", \"$stateParams\", \"$firebaseArray\", newReplyCtrl])\r\n\r\n    function newReplyCtrl($scope, $firebaseObject, $mdDialog, refService, currentAuth, replyService, timeService, $stateParams, $firebaseArray) {\r\n        $scope.hide = function() {\r\n            $mdDialog.hide();\r\n        };\r\n        $scope.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n        $scope.answer = function(answer) {\r\n            $mdDialog.hide(answer);\r\n        };\r\n        \r\n        String.prototype.replaceAll = function(str1, str2, ignore) {\r\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n        } \r\n        \r\n         marked.setOptions({\r\n            renderer: new marked.Renderer(),\r\n            gfm: true,\r\n            tables: true,\r\n            breaks: false,\r\n            pedantic: false,\r\n            sanitize: false, \r\n            smartLists: true,\r\n            smartypants: false,\r\n            highlight: function (code, lang) {\r\n              if (lang) {\r\n                return hljs.highlight(lang, code).value;\r\n              } else {\r\n                return hljs.highlightAuto(code).value;\r\n              }\r\n            }\r\n          });\r\n          \r\n         $scope.emojieList = {\r\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\r\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\r\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\r\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\r\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\r\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\r\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\r\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\r\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\r\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\r\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\r\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\r\n            //No :text: for this Begin\r\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\r\n            //Done\r\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\r\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\r\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\r\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\r\n          }\r\n        $scope.$watch('markdownData', function(current, original) {\r\n          $scope.outputText = marked(current);\r\n          //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\r\n          for(var prop in $scope.emojieList)\r\n              $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]); \r\n        });\r\n\r\n        $scope.submitNewReply = function() {\r\n            $scope.currentAuthGet = refService.ref().getAuth();\r\n\r\n            $scope.numRepliesAlready = $firebaseArray(refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST))\r\n\r\n            $scope.numRepliesAlready.$loaded(function(data) {\r\n                refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid).on(\"value\", function(snapshot) {\r\n                    $scope.userAvatar = snapshot.val().Image;\r\n                    $scope.userName = snapshot.val().Username;\r\n                    $scope.userEmail = snapshot.val().Email;\r\n\r\n                })\r\n                var pushingR = refService.ref().child(\"Replies\").child(replyService.creatorUsername + replyService.postNum).push({\r\n                    replyCreatorUsername: $scope.userName,\r\n                    replyCreatorAvatar: $scope.userAvatar,\r\n                    replyCreatorEmail: $scope.userEmail,\r\n                    replyCreatorUID: $scope.currentAuthGet.uid,\r\n                    replyCreatorValue: $scope.markdownData,\r\n                    replyCreatorDate: Date.now(),\r\n                    Replynum: data.length,\r\n                    replyCreatorDateParsed: timeService.getTimeF(new Date(parseInt(Date.now()))),\r\n                    topicCreatorUsername: replyService.creatorUsername,\r\n                    topicCreatorUID: replyService.creatorUID,\r\n                    topicCreatorTitle: replyService.creatorTitle,\r\n                    topicCreatorAvatar: replyService.creatorAvatar,\r\n                    topicCreatorSince: replyService.timeSinceCreated\r\n\r\n                })\r\n                refService.ref().child(\"Replies\").child(replyService.creatorUsername + replyService.postNum).child(pushingR.key()).update({\r\n                    pushKey: pushingR.key()\r\n                })\r\n\r\n                $scope.lastAct = $firebaseObject(refService.ref().child(\"Topics\"));\r\n                $scope.lastAct.$loaded(function(dataLast) {\r\n                    dataLast.forEach(function(snapDataLastAct) {\r\n                        if (snapDataLastAct.Postnum == $stateParams.POST) {\r\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\r\n                                LastActivity: Date.now(),\r\n                            })\r\n                            refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).once(\"value\", function(snapREPVIEWS) {\r\n                                if (!snapREPVIEWS.val().RepliesNum) {\r\n                                    console.log(snapREPVIEWS)\r\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\r\n                                        RepliesNum: (1)\r\n                                    })\r\n                                } else {\r\n                                    refService.ref().child(\"Topics\").child(snapDataLastAct.pushKey).update({\r\n                                        RepliesNum: (snapREPVIEWS.val().RepliesNum + 1)\r\n                                    })\r\n                                }\r\n\r\n\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n                $scope.markdownData = '';\r\n                $mdDialog.cancel();\r\n\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n})(angular);","(function(angular) {\n    'use struct';\n  angular\n    .module('ForumApp')\n    .controller('newTopicCtrl', [\"$scope\", \"$mdDialog\", \"$firebaseArray\",\"emojiListService\", \"refService\", \"$firebaseArray\", \"$firebaseObject\", \"$mdBottomSheet\", '$http', newTopicCtrl])\n\n\n \n  \n    function newTopicCtrl($scope, $mdDialog, $firebaseArray,emojiListService, refService, $firebaseArray, $firebaseObject, $mdBottomSheet, $http) {\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        $scope.logicToGoBack = function() {\n            $mdBottomSheet.cancel()\n        }\n        String.prototype.replaceAt=function(index, character) {\n            return this.substr(0, index) + character + this.substr(index+character.length);\n        }\n        String.prototype.replaceAll = function(str1, str2, ignore) {\n            return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n        } \n        \n        console.log();\n         marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false, \n            smartLists: true,\n            smartypants: false,\n            highlight: function (code, lang) {\n              if (lang) {\n                return hljs.highlight(lang, code).value;\n              } else {\n                return hljs.highlightAuto(code).value;\n              }\n            }\n          });\n          \n         $scope.emojieList = {\n            ':)': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':smile:': '<img src=\"assets/emoji/emoji-E056.png\"/>',\n            ':(': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':sad:': '<img src=\"assets/emoji/emoji-E058.png\"/> ',\n            ':D': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':smiley:': '<img src=\"assets/emoji/emoji-E415.png\"/> ',\n            ':;': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':very_happy:': '<img src=\"assets/emoji/emoji-E057.png\"/> ',\n            ':P': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':tounge_stuck_out:': '<img src=\"assets/emoji/emoji-E105.png\"/> ',\n            ':X': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            ':cant_talk:': '<img src=\"assets/emoji/emoji-E40C.png\"/>',\n            //No :text: for this Begin\n            'xD': '<img src=\"assets/emoji/emoji-E770.png\"/>',\n            //Done\n            '-1': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            ':minus_one:': '<img src=\"assets/emoji/emoji-E421.png\"/>',\n            '+1': '<img src=\"assets/emoji/emoji-E00E.png\"/>',\n            ':plus_one:': '<img src=\"assets/emoji/emoji-E00E.png\"/>'\n          }\n        $scope.$watch('markdownData', function(current, original) {\n          $scope.outputText = marked(current);\n          //EMOJIE LIST {PARAM} {https://github.com/amanuel2/ng-forum/wiki/How-to-write-emotions}\n          for(var prop in $scope.emojieList)\n              $scope.outputText = $scope.outputText.replaceAll(prop, $scope.emojieList[prop]); \n        });\n        //Load Tags If Not Done...\n        var defaultTags = [\"Assembly\", \"C\", \"C++\", \"Java\", \"Javascript\", \"Firebase\", \"AngularFire\", \"MongoDB\", \"NodeJS\",\n            \"Go\", \"PHP\", \"MySQL\", \"Postgree\", \"Ruby\", \"Python\", \"Perl\", \".Net\", \"ASP.Net\", \"C#\", \"Visual Basic\", \"VB.net\",\"AngularJS\", \"Materializecss\"\n        ]\n\n        $scope.isThereTag = false;\n\n        $scope.defaultTags = $firebaseArray(refService.ref().child(\"Constants\").child('Tags').child(\"Default\"));\n        \n\n        $scope.myConfig = {\n            create: true,\n            onChange: function(value) {\n                console.log('onChange', value)\n            },\n            valueField: 'ID',\n            labelField: 'Name',\n            maxItems: 5,\n            required: true,\n        }\n\n\n        $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n        $scope.tagCheckPrev.$loaded(function(dataC) {\n            if (dataC.Default) {\n                console.log(\"Default Already Loaded\")\n            }\n            else {\n                for (var i = 0; i < defaultTags.length; i++) {\n                    refService.ref().child(\"Constants\").child(\"Tags\").child(\"Default\").push({\n                        ID: i,\n                        Name: defaultTags[i]\n                    })\n                }\n            }\n        })\n\n\n        $scope.undoAndRedo = function(ev, opt) {\n            if (opt == 'undo') {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Undo')\n                    .textContent('Just Click Ctrl + Z Simultaneously to Undo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n\n            else {\n                $mdDialog.show(\n                    $mdDialog.alert()\n                    .parent(angular.element(document.querySelector('#popupContainer')))\n                    .clickOutsideToClose(true)\n                    .title('Redo')\n                    .textContent('Just Click Ctrl + Y Simultaneously to Redo Your Changes')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                );\n            }\n        }\n\n        angular.element(document).ready(function() {\n            new Clipboard('.btn');\n        })\n        $scope.markdownData = \"# Type Your Markrdown Here\";\n\n        $scope.shortcuts = function(shortcutName) {\n            var element = document.getElementById('markdownUserType');\n            switch (shortcutName) {\n                case 'bold':\n                    element.value += '**BoldTextHere**';\n                    break;\n                case 'italics':\n                    element.value += '_ItalicTextHere_';\n                    break;\n\n                case 'image':\n                    element.value += '![](http://)';\n                    break;\n\n                case 'url':\n                    element.value += '[](http://)';\n                    break;\n\n                case 'quote':\n                    element.value += '> Quote Here';\n                    break;\n\n                case 'number':\n                    element.value += '\\n\\n 1. List item'\n                    break;\n\n                case 'bullet':\n                    element.value += '\\n\\n * List item'\n                    break;\n                case 'header':\n                    element.value += '# Header Here.';\n                    break;\n\n                case 'code':\n                    element.value += \"```[languageName. If you dont know delete this bracket and leave it with three ticks]\\n\" + \"console.log('Code Here') \\n\" + \"```\";\n                    break;\n\n                case 'horizontal':\n                    element.value += \"\\n\\n ----\"\n                    break;\n\n                case 'paste':\n                    if (window.clipboardData) {\n                        element.value += window.clipboardData.getData(\"Text\");\n                    }\n                    else {\n                        alertify.error(window.clipboardData.getData('Text'));\n                    }\n\n                case 'help':\n                    window.open('https://simplemde.com/markdown-guide');\n                    break;\n\n            }\n        }\n        $scope.submitNewTopic = function() {\n            var indexSelected = $scope.tagsSelected;\n            $scope.tagsSelectedFireBase = [];\n            //$scope.defaultTags\n            for (var i = 0; i < indexSelected.length; i++) {\n                $scope.tagsSelectedFireBase.push($scope.defaultTags[indexSelected[i]].Name)\n            }\n\n            var search = $firebaseArray(refService.ref().child(\"Topics\"))\n            search.$loaded(function(data) {\n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).on(\"value\", function(snapshot) {\n                    $scope.userAvatar = snapshot.val().Image;\n                    $scope.userName = snapshot.val().Username;\n                    $scope.userEmail = snapshot.val().Email;\n\n                    var pushing = refService.ref().child(\"Topics\").push({\n                        Title: $scope.topic.title,\n                        Value: $scope.markdownData,\n                        DateCreated: Date.now(),\n                        LastActivity : Date.now(),\n                        Username: $scope.userName,\n                        Email: $scope.userEmail,\n                        Avatar: $scope.userAvatar,\n                        UID: currentAuth.uid,\n                        Tags: $scope.tagsSelectedFireBase,\n                        Postnum: data.length,\n                        IsAcceptedAnwser: false,\n                        Votes: 0,\n                        AcceptedAnwserReplyNum: -1\n                    })\n\n                    refService.ref().child(\"Topics\").child(pushing.key()).update({\n                        pushKey: pushing.key()\n                    })\n                    $mdBottomSheet.cancel();\n                    $scope.topic.sentence = \"\";\n                    $scope.topic.title = \"\";\n                })\n            })\n\n\n        }\n\n\n\n\n    }\n})(angular);","(function(angular) {\n    \n    'use strict';\n    \n    angular\n    \n    .module('ForumApp')\n    .controller('otherUserProfileCtrl', [\"$scope\", \"$firebaseArray\", \"$stateParams\", \"refService\", \"$mdDialog\",\"otherUserProfilePageService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"timeService\", otherUserProfileCtrl])\n\n    function otherUserProfileCtrl($scope, $firebaseArray, $stateParams, refService, $mdDialog,otherUserProfilePageService, $firebaseObject, $state, otherUserService, timeService) {\n\n        var info = otherUserService.getUserInfo();\n        var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(info.replyCreatorUID));\n        var topicLenObj = $firebaseArray(refService.ref().child(\"Topics\"));\n        $scope.precence = \"\";\n        $scope.timeSinceNoPageOBJ = \"Not Set\"\n        $scope.timeSinceNoPage = \"Not\";\n        $scope.currentAuthGetOTHER = refService.ref().getAuth();\n        $scope.info = otherUserService.getUserInfo()\n        $scope.otherUserUID = $scope.info.replyCreatorUID\n        $scope.otherUserUsername = '';\n\n\n\n        obj.$loaded(function(data) {\n                $scope.info = otherUserService.getUserInfo()\n                $scope.ACTUALinfo = otherUserService.ACTUALgetUserInfo();\n                $scope.otherUserEmail = $scope.info.replyCreatorEmail\n                $scope.otherUserImage = $scope.info.replyCreatorAvatar\n                $scope.otherUserUID = $scope.info.replyCreatorUID\n                $scope.otherUserUsername = $scope.info.replyCreatorUsername;\n                $scope.numFollowing = data.following;\n                $scope.numFollowers = data.followers;\n                if ($scope.ACTUALinfo.Moderator == false) {\n                    $scope.otherMod = \"Not a Moderator\";\n                }\n                else {\n                    $scope.otherMod = \"Respected Moderator\";\n                }\n                $scope.otherDesc = $scope.ACTUALinfo.Description || \"This user is silent as the butterflies\";\n                $scope.count = 0;\n\n                 topicLenObj.$loaded(function(topicData) {\n                     for (var i = 0; i < topicData.length; i++) {\n                         if (topicData[i].UID == $scope.otherUserUID) {\n                             $scope.count++;\n                         }\n                     }\n                 })\n\n                $scope.timeSINCEOBJ = $firebaseObject(refService.ref());\n                $scope.timeSINCEOBJ.$loaded(function(dataLOAD){\n                    var OBJPRECENCE = dataLOAD.presence;\n                    for(var prop in OBJPRECENCE){\n                        var id = $scope.otherUserUID\n                        $scope.timeSinceNoPageOBJ = OBJPRECENCE[id];\n                    }\n                })\n                \n                var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.otherUserUID);\n                userRef.once(\"value\", function(snapshotPrecence) {\n                    if (snapshotPrecence.val() == \"Online\")\n                        $scope.precence = true\n\n                    else if (snapshotPrecence.val() == \"Idle\")\n                        $scope.precence = \"Idle\"\n\n                    else{\n                        $scope.precence = false\n                        $scope.timeSinceNoPage = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n                        console.log($scope.timeSinceNoPage)\n                    }\n\n                })\n            },\n            function(error) {\n                console.error(\"Error:\", error);\n            }\n        );\n       \n\n\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.goToPage = function(){\n            console.log($scope.otherUserUsername);\n            otherUserProfilePageService.setID($scope.otherUserUID);\n            $state.go('authHome.otherUserPage', {\n                'USERNAME' : $scope.otherUserUsername\n            })\n        }\n\n\n         $scope.addFolower = function() {\n            $scope.followerCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID))\n            $scope.followingCheck = $firebaseArray(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid))\n\n\n            $scope.followerCheck.$loaded(function(dataCheckFollower) {\n                console.log(dataCheckFollower)\n                for (var i = 0; i < dataCheckFollower.length; i++) {\n                    if (dataCheckFollower[i].$id == \"followers\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').update({\n                            followers: (dataCheckFollower[i].$value + 1)\n                        })\n\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).on(\"value\", function(snap) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).child('followerLength').child('followersInfo').push({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snap.val().Username,\n                                Avatar: snap.val().Image,\n                                Desc: snap.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n            $scope.followingCheck.$loaded(function(dataCheckFollowing) {\n                console.log(dataCheckFollowing)\n                for (var i = 0; i < dataCheckFollowing.length; i++) {\n                    if (dataCheckFollowing[i].$id == \"following\") {\n                        refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').update({\n                            following: (dataCheckFollowing[i].$value + 1)\n                        })\n                        refService.ref().child(\"UserAuthInfo\").child($scope.otherUserUID).on(\"value\", function(snapp) {\n                            refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetOTHER.uid).child('followingLength').child('followingInfo').update({\n                                UID: $scope.currentAuthGetOTHER.uid,\n                                Username: snapp.val().Username,\n                                Avatar: snapp.val().Image,\n                                Desc: snapp.val().Description || \"The User is Silent as the butterflies...\"\n                            })\n                        })\n\n                    }\n                }\n\n            })\n\n        }\n\n\n        $scope.privateMessageStart = function(username, mod, desc, image) {\n            $state.go(\"authHome.privateMes\")\n        }\n        $scope.goToTopic = function(top) {\n            $state.go(\"authHome.topic\", {\n                \"AVATAR\": $scope.otherUserImage,\n                \"DATE\": top.DateCreated,\n                \"EMAIL\": $scope.otherUserEmail,\n                \"TITLE\": top.Title,\n                \"UID\": top.UID,\n                \"USERNAME\": top.Username,\n                \"VALUE\": top.Value\n            })\n        }\n\n    }\n})(angular);","(function(){\n    \n  'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('otherUserProfilePageCtrl', [\"$scope\",\"$stateParams\",\"otherUserProfilePageService\", otherUserProfilePageCtrlFunc])\n    \n    \n    function otherUserProfilePageCtrlFunc($scope,$stateParams,otherUserProfilePageService){\n        $scope.otherUSERIDPAGE = otherUserProfilePageService.getID();\n        console.log($scope.otherUSERIDPAGE);\n        \n    }\n    \n    \n})(angular);","(function(angular){\n 'use strict';    \n     angular\n     .module('ForumApp')\n     .controller('profileCtrl', [\"$scope\",\"$firebaseObject\",\"refService\",\"timeService\",\"$stateParams\", profileCtrl])\n\n    function profileCtrl($scope,$firebaseObject,refService,timeService,$stateParams){\n       $scope.currentAuthGetPro = refService.ref().getAuth();\n       $scope.precence = \"\";\n       var userRef = new Firebase('https://uniquecodersforums.firebaseio.com/presence/' + $scope.currentAuthGetPro.uid);\n       userRef.on(\"value\", function(snapshotPrecence){\n           if(snapshotPrecence.val() == \"Online\")\n                $scope.precence = \"Online\"\n                \n            else if(snapshotPrecence.val() == \"Idle\")  \n                $scope.precence = \"Idle\"\n                \n            else\n                $scope.precence = timeService.getTimeF(new Date(parseInt(snapshotPrecence.val())));\n            \n                \n       })\n       \n      \n       String.prototype.replaceAll = function(str1, str2, ignore) {\n        return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\n       } \n\n\n         var arrayOfPrevious5Days = [];        \n         var date = Date.now();\n         var date = parseInt(date);\n         var newDate = new Date(parseInt(date));\n        \n         newDate = JSON.stringify(newDate);\n         newDate = newDate.replaceAll('\"', '');\n         newDate = newDate.substring(8,10);\n         var dateNum = parseInt(newDate);\n         var dateDiff5 = dateNum-5;\n         for(var i=dateNum; i>dateDiff5; i--)\n              arrayOfPrevious5Days.push(i);\n         var index_zero = arrayOfPrevious5Days[0];\n         var index_one = arrayOfPrevious5Days[1];\n         var index_two = arrayOfPrevious5Days[2];\n         var index_three = arrayOfPrevious5Days[3];\n         var index_four = arrayOfPrevious5Days[4];\n        var TOPICS_COUNT = [\n            index_zero_obj = {\n                COUNT : 0\n            },\n             index_one_obj = {\n                COUNT : 0\n            },\n             index_two_obj = {\n                COUNT : 0\n            },\n             index_three_obj = {\n                COUNT : 0\n            },\n             index_four_obj = {\n                COUNT : 0\n            },\n        ]\n        var REPLIES_COUNT = 0;\n        refService.ref().child(\"Topics\").once(\"value\", function(snapsnap){\n            snapsnap.forEach(function(childSnao){\n                  var key = childSnao.key();\n                  var childData = childSnao.val();\n                  \n                  if(childData.UID == $stateParams.UID){\n                      var parsed = new Date(parseInt((childData.DateCreated))); \n                      parsed = JSON.stringify(parsed);\n                     parsed = parsed.replaceAll('\"', '');\n                     parsed = parsed.substring(8,10);\n                     var parsed = parseInt(parsed);\n                     if(parsed == index_zero)\n                         (TOPICS_COUNT[0].COUNT++)\n                     else if(parsed == index_one)\n                         (TOPICS_COUNT[1].COUNT++);\n                     else if(parsed == index_two)\n                         (TOPICS_COUNT[2].COUNT++);\n                     else if(parsed == index_three)\n                         (TOPICS_COUNT[3].COUNT++);\n                     else if(parsed == index_four)\n                         (TOPICS_COUNT[4].COUNT++);\n                  }\n            })\n        })\n        \n        console.log(TOPICS_COUNT);\n        var TOPICS_COUNT_ARRAY = [TOPICS_COUNT[0].Count, TOPICS_COUNT[1].Count,TOPICS_COUNT[2].Count,TOPICS_COUNT[3].Count,TOPICS_COUNT[4].Count]\n        \n        // MaterialCharts.bar(\"#bar_chart_container\", {\n        //     \"datasets\": {\n        //         \"values\": TOPICS_COUNT_ARRAY,\n        //         \"labels\": arrayOfPrevious5Days\n        //         , \"color\": \"blue\"\n        //     },\n        //     \"height\": \"240px\",\n        //     \"width\": \"444px\",\n        //     \"shadowDepth\": \"0\"\n        // }) \n       \n         var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGetPro.uid));\n         var objPres = $firebaseObject(refService.ref().child(\"presence\"));\n         \n         \n        obj.$loaded(function(data) {\n                $scope.Username = data.Username;\n                $scope.Email = data.Email;\n                $scope.UID = $scope.currentAuthGetPro.uid;\n                $scope.image = data.Image;\n                $scope.backImage = data.profileBackground\n                $scope.desc = data.Description || \"The User is Silent as the butterflies...\"\n                $scope.Moderator = data.Moderator;\n                $scope.ProfileViews = data.profileViews\n                $scope.Followers = data.followers;\n                $scope.Following = data.following;\n            },\n            function(error) {\n                console.error(\"Error:\", error);\n            }\n        \n        );\n        \n        objPres.$loaded(function(data){\n            $scope.isPresent = data[$scope.currentAuthGetPro.uid];\n            if($scope.isPresent !== 'Online'){\n                $scope.isPresent = timeService.getTimeF(new Date(parseInt($scope.isPresent)));\n            }\n        })\n        \n       \n    }\n})(angular);","(function(angular) {\n\n 'use strict';    \n    angular\n        .module('ForumApp')\n        .controller(\"settingsCtrl\", [\"$scope\", \"refService\", \"$stateParams\", \"$mdDialog\", \"$mdMedia\", \"$firebaseObject\", settingsCtrl])\n\n    function settingsCtrl($scope, refService, $stateParams, $mdDialog, $mdMedia, $firebaseObject) {\n\n        //Setting Infos....\n        $scope.currentAuthSet = refService.ref().getAuth();\n    \n        $scope.userInfo = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($stateParams.UID))\n        $scope.passwordSHARP = \"********\"\n        $scope.uid = $scope.currentAuthSet.uid;\n        $scope.desc = \"See your descripton in the profile.\"\n        \n        function isPassChange(){\n           if($scope.currentAuthSet.provider == 'twitter' || $scope.currentAuthSet.provider == 'google'\n                || $scope.currentAuthSet.provider == 'github')\n            {\n                return true;\n            } \n            else{\n                return false;\n            }\n        }\n        \n        \n    \n        $scope.changeEmail = function(ev) {\n            if(isPassChange() == true)\n            {\n               $mdDialog.show(\n                  $mdDialog.alert()\n                    .parent(angular.element(document.getElementsByTagName(\"body\")))\n                    .clickOutsideToClose(true)\n                    .title('Email')\n                    .textContent('Cant change email since your logged in from a provider')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                ); \n            }\n            else{\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'emailSettingsCtrl',\n                    templateUrl: 'app/components/settings/mini-view/emailChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n            }\n        }\n\n        $scope.descriptonChange = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'descChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/descriptonChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n\n        $scope.changePassword = function(ev) {\n            \n            if(isPassChange() == true)\n            {\n               $mdDialog.show(\n                  $mdDialog.alert()\n                    .parent(angular.element(document.getElementsByTagName(\"body\")))\n                    .clickOutsideToClose(true)\n                    .title('Password')\n                    .textContent('Cant change password since your logged in from a provider')\n                    .ariaLabel('Alert Dialog Demo')\n                    .ok('Got it!')\n                    .targetEvent(ev)\n                ); \n            }\n            else{\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'passwordChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/passwordChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n            }\n            \n        }\n        $scope.changeUsername = function(ev) {\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'usernameChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/usernameChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });\n        }\n        \n        $scope.changeImage = function(ev){\n          var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n            $mdDialog.show({\n                    controller: 'imageChangeCtrl',\n                    templateUrl: 'app/components/settings/mini-view/imageChange.html',\n                    parent: angular.element(document.body),\n                    resolve: {\n                        // controller will not be loaded until $waitForAuth resolves\n                        // Auth refers to our $firebaseAuth wrapper in the example above\n                        \"currentAuth\": [\"refService\", function(refService) {\n                            // $waitForAuth returns a promise so the resolve waits for it to complete\n                            return refService.refAuth().$requireAuth();\n                        }]\n                    },\n                    targetEvent: ev,\n                    clickOutsideToClose: true,\n                    fullscreen: useFullScreen\n                })\n                .then(function(answer) {\n\n                }, function() {\n\n                });\n            $scope.$watch(function() {\n                return $mdMedia('xs') || $mdMedia('sm');\n            }, function(wantsFullScreen) {\n                $scope.customFullscreen = (wantsFullScreen === true);\n            });  \n        }\n    }\n\n})(angular);","(function(angular) {\n    \n  'use strict';    \n    angular\n            .module('ForumApp')\n            .controller('topicCtrl', [\"$scope\", \"$stateParams\", \"refService\", \"editReplyService\", \"dateService\", \"$firebaseArray\", \"timeService\", \"$mdBottomSheet\", \"$mdMedia\", \"$mdDialog\", \"replyService\", \"$firebaseObject\", \"$state\", \"otherUserService\", \"editTopicService\", topicCtrl])\n\n\n    function topicCtrl($scope, $stateParams, refService, editReplyService, dateService, $firebaseArray, timeService, $mdBottomSheet, $mdMedia, $mdDialog, replyService, $firebaseObject, $state, otherUserService, editTopicService) {\n        var currentAuth = refService.ref().getAuth();\n        $scope.currentAuthGet = refService.ref().getAuth();\n\n        function generateUUID(length) {\n            var d = new Date().getTime();\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                var r = (d + Math.random() * length) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n            return uuid;\n        };\n\n        if ($scope.currentAuthGet) {\n\n        }\n        else {\n            currentAuth = {\n                uid: generateUUID(16)\n            }\n        }\n\n        marked.setOptions({\n            renderer: new marked.Renderer(),\n            gfm: true,\n            tables: true,\n            breaks: false,\n            pedantic: false,\n            sanitize: false,\n            smartLists: true,\n            smartypants: false,\n            highlight: function(code, lang) {\n                if (lang) {\n                    return hljs.highlight(lang, code).value;\n                }\n                else {\n                    return hljs.highlightAuto(code).value;\n                }\n            }\n        });\n\n     \n\n\n\n\n\n\n        $scope.notAuthReplyTopic = function() {\n                alertify.myAlert(\"Sorry , You must be logged in , to reply or have many feautres available.\");\n            }\n            //SETTING INFO\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            snapshot.forEach(function(EVEN) {\n                var key = EVEN.key();\n                var childData = EVEN.val();\n\n                if (childData.Postnum == $stateParams.POST) {\n                    $scope.creatorAvatar = childData.Avatar\n                    $scope.creatorTitle = childData.Title;\n                    $scope.creatorUID = childData.UID;\n                    $scope.creatorUsername = childData.Username;\n                    $scope.creatorValue = childData.Value;\n                    $scope.creatorDate = childData.DateCreated;\n                    $scope.creatorEmail = childData.Email;\n                    $scope.repliesNum = childData.RepliesNum;\n                    $scope.timeSinceCreated = timeService.getTimeF(new Date(parseInt($scope.creatorDate)));\n                    var dateCheck = new Date(parseInt($scope.creatorDate));\n                    $scope.creatorDateParsed = timeService.getTimeF(dateCheck);\n                }\n            })\n\n\n            $scope.actualReplyUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.creatorUID));\n            $scope.thisUser = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child($scope.currentAuthGet.uid));\n            $scope.isModerator;\n            $scope.currentUserAvatar;\n            $scope.thisUser.$loaded(function(data){\n               $scope.isModerator = data.Moderator;\n               $scope.currentUserAvatar = data.Image;\n            })\n        })\n\n\n        //Setting Views\n        //Adding Them..\n        $scope.views = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").child(currentAuth.uid).set({\n                            Views: true\n                        })\n                    }\n                })\n            })\n            //Viewing them\n        refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Views\").on(\"value\", function(snapshot) {\n                        $scope.countViews = snapshot.numChildren();\n                    })\n                }\n            })\n        })\n\n        /* var viewsCount = $firebaseArray(refService.ref().child(\"Topics\"));\n\n         viewsCount.$loaded(function(data) {\n             $scope.countViews = data.length;\n             console.log(data)\n         })*/\n\n\n\n\n        function voteHelper() {\n            $scope.didVote = true;\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    childSnapshot.forEach(function(viewsCheck) {\n                        /*var keyCheck = viewsCheck.key();\n                        var childDataCheck = viewsCheck.val();\n                        console.log(childData.UpVotes);*/\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotViews) {\n                            snapshotViews.forEach(function(snapShotViewsForEach) {\n                                var keySNAPVIEWS = snapShotViewsForEach.key();\n                                var childDataSNAPVIEWS = snapShotViewsForEach.val();\n\n                                if (childDataSNAPVIEWS == currentAuth.uid) {\n                                    $scope.didVote = true;\n                                }\n                            })\n\n                        })\n\n                    })\n                })\n            })\n            if ($scope.didVote == true) {\n                return \"Voted\"\n            }\n            else {\n                return \"NotVoted\"\n            }\n        }\n        $scope.votedAlready = function() {\n            if (voteHelper() == \"Voted\")\n                return false;\n\n            else\n                return true;\n\n\n        }\n\n        //Setting Voting\n        //Adding them...\n        $scope.upVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: 1\n                        })\n                    }\n                })\n            })\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"thumb-icon\");\n            upVoteIcon.classList.add(\"upvote\");\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"downvote\");\n            downVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n        $scope.downVote = function() {\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n                snapshot.forEach(function(childSnapshot) {\n                    var key = childSnapshot.key();\n                    var childData = childSnapshot.val();\n                    if ($stateParams.POST == childData.Postnum) {\n                        refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").child(currentAuth.uid).set({\n                            Vote: -1\n                        })\n                    }\n                })\n            })\n\n            var downVoteIcon = document.getElementById(\"downVoteIcon\");\n            downVoteIcon.classList.remove(\"thumb-icon\");\n            downVoteIcon.classList.add(\"downvote\");\n\n            var upVoteIcon = document.getElementById(\"upVoteIcon\");\n            upVoteIcon.classList.remove(\"upvote\");\n            upVoteIcon.classList.add(\"thumb-icon\");\n\n        }\n\n\n\n        $scope.countVote = 0;\n        //Viewing Them..\n        $scope.votesViewing = $firebaseObject(refService.ref().child(\"Topics\"))\n        refService.ref().child(\"Topics\").on(\"value\", function(snapshot) {\n            $scope.countVote = 0;\n            snapshot.forEach(function(childSnapshot) {\n                var key = childSnapshot.key();\n                var childData = childSnapshot.val();\n                if ($stateParams.POST == childData.Postnum) {\n                    refService.ref().child(\"Topics\").child(childData.pushKey).child(\"Vote\").on(\"value\", function(snapshotVote) {\n                        snapshotVote.forEach(function(VoteChild) {\n                            VoteChild.forEach(function(evenChildVote) {\n                                var keyCHILD = evenChildVote.key();\n                                var childDataCHILD = evenChildVote.val();\n                                $scope.countVote += (childDataCHILD);\n                            })\n                        })\n                    })\n                }\n            })\n        })\n\n\n\n\n\n\n\n        //SETTING REPLIES\n\n        $scope.replies = $firebaseObject(refService.ref().child(\"Replies\").child($scope.creatorUsername + $stateParams.POST));\n\n\n\n\n        //Setting Tags..\n        $scope.tagsTopic = $firebaseObject(refService.ref().child(\"Topics\"));\n\n        $scope.tagsTopic.$loaded(function(data) {\n            data.forEach(function(snapDataTag) {\n\n                if (snapDataTag.Postnum == $stateParams.POST) {\n\n                    $scope.tagsTopicRep = snapDataTag.Tags;\n\n                }\n            })\n        })\n\n\n        //Getting ClickProfile Set Up...\n        $scope.goToProfile = function(info, ev) {\n            if (ev) {\n                otherUserService.setUserInfo(info);\n                otherUserService.ACTUALsetUserInfo($scope.actualReplyUser);\n                $mdDialog.show({\n                        controller: 'otherUserProfileCtrl',\n                        templateUrl: 'app/components/otherUserProfile/otherUserProfile.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.editReply = function(ev, reps) {\n            if (ev) {\n                editReplyService.setInfo(\n                    reps.pushKey,\n                    $stateParams.USERNAME,\n                    $stateParams.POST,\n                    currentAuth.uid);\n                $mdDialog.show({\n                        controller: 'editReplyCtrl',\n                        templateUrl: 'app/components/editReply/editReply.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                    },\n                    $mdDialog.alert()\n                    .openFrom({\n                        top: -50,\n                        width: 30,\n                        height: 80\n                    })\n                    .closeTo({\n                        left: 1500\n                    })\n                );\n            }\n            else {\n                if (true)\n                    return null;\n            }\n        }\n\n        $scope.editValue = function(ev) {\n\n            if (ev) {\n                editTopicService.setDateCreated($stateParams.DATE);\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdDialog.show({\n                        controller: 'editTopicCtrl',\n                        templateUrl: 'app/components/editTopic/editTopic.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n\n            }\n            else {\n                return null;\n            }\n        }\n\n        $scope.deletePost = function(rep) {\n            alertify.confirm('Are you sure you want to delete your reply?', function() {\n                refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST).child(rep.pushKey)\n                    .remove(function(error) {\n                        if (error)\n                            alertify.error(\"Deleting Failed : \" + error);\n                        else\n                            alertify.success(\"Sucessfully Deleted!\")\n                    })\n            }, function() {\n                alertify.warn('Canceled')\n            });\n        }\n\n\n        /////////\n        //https://ng-fourm-amanuel2.c9users.io/index.html#/authHome/topic/0/Amanuel\n        $scope.urlSHARINGCURRENT = 'https://ng-fourm-amanuel2.c9users.io/index.html#/authHome/topic/' + $stateParams.POST + '/' + $stateParams.USERNAME\n\n        $scope.openShareMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        //////////////////////////////////////////////////////////////////////  CHECK IF YOUR SUPOSE TO SEE  ICONS ////////////////////////////////////////////////////\n\n        $scope.funcCheckEDIT = function(reps) {\n            if (currentAuth.uid == reps.replyCreatorUID)\n                return true;\n            else if($scope.isModerator == true)\n                return true;\n            else \n                return false;\n        }\n        $scope.goBackTopic = function() {\n            $state.go('authHome.desc')\n        }\n\n        $scope.isReplyable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBestAnwser = function(rep) {\n            if($scope.isModerator == true)\n                return true;\n            else if(currentAuth.uid == rep.replyCreatorUID)\n                return true;\n            else\n                return false;\n        }\n        \n \n\n        $scope.isLikeable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n            else if(currentAuth.uid == null)\n                return false;\n            else\n                return true;\n        }\n\n        $scope.isShareble = function(rep) {\n            if (true)\n                return true;\n            else\n                return false;\n        }\n\n        $scope.isFlaggable = function(rep) {\n            if (currentAuth.uid == rep.replyCreatorUID)\n                return false;\n\n            else\n                return true;\n        }\n        $scope.isBookmarkable = function(rep) {\n                if ($scope.currentAuthGet)\n                    return true;\n\n                else\n                    return false;\n            }\n            ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n        //////////////////////////////////////////////////////****** TOGGLING ICONS ***** //////////////////////////////////////////////////////////////\n\n\n\n        ////Check Box\n        \n             \n                \n     \n                \n                function isCheckedHelper(rep){\n                    var returnerCheck = \"\";\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                    snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                            var bookkey = evenChildBook.key();\n                            var bookchildData = evenChildBook.val();\n                            if (bookchildData.Postnum == $stateParams.POST) {\n                                refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").once(\"value\", function(snapBest){\n                                    if(snapBest.val().isBestAnwser == true && snapBest.val().replyNumber == rep.Replynum)\n                                            returnerCheck = \"True\"; \n                                    else\n                                        returnerCheck = \"False\";\n                                })\n                            }\n                        })\n                    })\n                  return returnerCheck;    \n                }\n                \n                $scope.isChecked = function(rep){\n                    if(isCheckedHelper(rep) == \"True\")\n                        return true;\n                    else\n                        return false;\n                }\n                \n                $scope.classBestAnwser = function(rep){\n                    if(isCheckedHelper(rep) == \"True\")\n                        return \"best-answer\";\n                    else\n                        return \"none\";\n                }\n        \n        $scope.notChecked = function(rep) {\n            $scope.isChecked = true;\n            \n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                    snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                                isBestAnwser : true,\n                                replyNumber : rep.Replynum\n                            })\n                        }\n                    })\n                })\n            \n        }\n        \n        $scope.checked = function(rep) {\n             $scope.isChecked = false;\n             refService.ref().child(\"Topics\").once(\"value\", function(snapshotBestAnwserOutlineTopic) {\n                    snapshotBestAnwserOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"BestAnwser\").update({\n                                isBestAnwser : false,\n                                replyNumber : null\n                            })\n                        }\n                    })\n                })\n        }\n        \n        // $scope.checkBoxNot = false;\n        // $scope.checkBoxYes = false;\n        // $scope.checkBoxTrueCheck = $firebaseArray(refService.ref().child(\"Topics\"));\n\n        // function actualHelperYes(reps) {\n        //     $scope.inside;\n        //     $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //         for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //             if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //                 if (CHECKINGTRUE[i].IsAcceptedAnwser == true && CHECKINGTRUE[i].AcceptedAnwserReplyNum == reps.Replynum) {\n        //                     console.log(CHECKINGTRUE[i].AcceptedAnwserReplyNum, reps.Replynum);\n        //                     $scope.inside = true;\n        //                 }\n        //                 else {\n        //                     $scope.inside = true;\n        //                 }\n        //             }\n        //         }\n        //     })\n        //     return $scope.inside;\n        // }\n        // $scope.checkFuncYes = function(reps) {\n        //     if (actualHelperYes(reps) == true) {\n        //         return true;\n        //     }\n        //     else {\n        //         console.log(actualHelperYes(reps));\n        //         return false;\n        //     }\n        // }\n        // $scope.checkBoxTrueCheck.$loaded(function(CHECKINGTRUE) {\n        //     for (var i = 0; i < CHECKINGTRUE.length; i++) {\n        //         if (CHECKINGTRUE[i].Postnum == $stateParams.POST) {\n        //             if (CHECKINGTRUE[i].IsAcceptedAnwser == true) {\n        //                 $scope.checkBoxYes = true;\n        //             }\n        //             else {\n        //                 $scope.checkBoxNot = true;\n        //             }\n        //         }\n        //     }\n        // })\n\n        // $scope.checkBoxNotNgClick = function(rep) {\n        //     $scope.checkBoxYes = true;\n        //     $scope.checkBoxNot = false;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).update({\n        //                     IsAcceptedAnwser: true,\n        //                     AcceptedAnwserReplyNum: rep.Replynum\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        // function bestAnwserImageIfHelper() {\n        //     $scope.decicor;\n        //     $scope.dataNot = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataNot.$loaded(function(dataNoNgClick) {\n        //         for (var i = 0; i < dataNoNgClick.length; i++) {\n        //             if (dataNoNgClick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataNoNgClick[i].pushKey).on(\"value\", function(snapshotChild) {\n        //                     if (snapshotChild.val().IsAcceptedAnwser == true) {\n        //                         $scope.decicor = true\n        //                     }\n        //                     else {\n        //                         $scope.decicor = false\n        //                     }\n        //                 })\n\n        //             }\n        //         }\n\n        //         if ($scope.decicor == true) {\n        //             return \"True\"\n        //         }\n        //         else {\n        //             return \"Not\"\n        //         }\n        //     })\n        // }\n        // $scope.bestAnwserImageIf = function(rep) {\n        //     if (bestAnwserImageIfHelper() == \"True\") {\n        //         return true;\n        //     }\n        //     else {\n        //         return false;\n        //     }\n        // }\n\n\n        // $scope.checkBoxNgClick = function(rep) {\n        //     $scope.checkBoxYes = false;\n        //     $scope.checkBoxNot = true;\n        //     $scope.dataYes = $firebaseArray(refService.ref().child(\"Topics\"));\n        //     $scope.dataYes.$loaded(function(dataYesNgCLick) {\n        //         for (var i = 0; i < dataYesNgCLick.length; i++) {\n        //             if (dataYesNgCLick[i].Postnum == $stateParams.POST) {\n        //                 refService.ref().child(\"Topics\").child(dataYesNgCLick[i].pushKey).update({\n        //                     IsAcceptedAnwser: false,\n        //                     AcceptedAnwserReplyNum: -1\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        ////Like\n        $scope.likeBoxNo = true;\n        $scope.likeBoxYes = false;\n        \n        function liked(rep){\n            var returner = \"\";\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                    snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Replynum == (rep.Replynum)) {\n                            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).once(\"value\", function(snapp){\n                                if(snapp.val() == null)\n                                    returner = \"False\";\n                                else{\n                                    if(snapp.val().Like == true)\n                                        returner = \"True\"\n                                    else\n                                        returner = \"False\";\n                                }    \n                            })\n                        }\n                    })\n                }) \n            return returner;    \n        }\n        $scope.likeBox = function(rep){\n            if(liked(rep) == \"True\")\n                return true;\n            else if(liked(rep) == \"False\")\n                return false;\n        }\n\n        $scope.likeBoxNoNgClick = function(rep) {\n            //Your About To Like the Post\n            $scope.likeBoxYes = true;\n            $scope.likeBoxNo = false;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                    snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Replynum == (rep.Replynum)) {\n                            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                                Like: true,\n                                Avatar : $scope.currentUserAvatar\n                            })\n                        }\n                    })\n                })\n        }\n\n\n        $scope.likeBoxYesNgClick = function(rep) {\n            $scope.likeBoxYes = false;\n            $scope.likeBoxNo = true;\n            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).once(\"value\", function(snapshotLikeOutlineTopic) {\n                    snapshotLikeOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Replynum == (rep.Replynum)) {\n                            refService.ref().child(\"Replies\").child($stateParams.USERNAME+$stateParams.POST).child(bookchildData.pushKey).child(\"Likes\").child($scope.currentAuthGet.uid).update({\n                                Like: false,\n                                Avarar : $scope.currentUserAvatar\n                            })\n                        }\n                    })\n                })\n        }\n\n\n        //Bookmark\n        $scope.bookmarkBoxNo = true;\n        $scope.bookmarkBoxYes = false;\n\n        $scope.bookmarkBoxNoNgClick = function(rep) {\n            $scope.bookmarkBoxYes = true;\n            $scope.bookmarkBoxNo = false;\n        }\n\n\n        $scope.bookmarkBoxYesNgClick = function(rep) {\n            $scope.bookmarkBoxYes = false;\n            $scope.bookmarkBoxNo = true;\n        }\n\n\n        //Like Views\n\n\n/*\n$scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n                     $scope.objBookmark.$loaded(function(dataBook){\n                         for(var prop in dataBook){\n                             console.log(prop);\n                             if(dataBook[prop] !== null) {\n                                 if(dataBook[prop].Postnum == $stateParams.POST) {\n                                     refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                           if(snapap.val() !== null) {\n                                               $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                           }\n                                     })\n                                 }\n                             }\n                         }\n                     })\n                    \n                      $scope.tagCheckPrev = $firebaseObject(refService.ref().child(\"Constants\").child(\"Tags\"));\n\n \n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                            snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                                var bookkey = evenChildBook.key();\n                                var bookchildData = evenChildBook.val();\n                                if (bookchildData.Postnum == $stateParams.POST) {\n                                    var firebaseCheckBookmark = $firebaseObject(refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\"))\n                                    firebaseCheckBookmark.$loaded(function(dataC) {\n                                        if(dataC[$scope.currentAuthGet.uid]){\n                                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                               if(snapap.val() !== null) {\n                                                   $scope.bookMarkToggleTopic = snapap.val().Bookmark;\n                                               }\n                                            })\n                                        }\n                                        else\n                                            $scope.bookMarkToggleTopic = true;\n                                    })\n                                    \n                                }\n                            })\n                     })\n            \n*/\n        //TOPIC BUTTONS//////////////////BEGIN//////////////////////////////////////\n        \n        function VoteHelper() {\n            var returne = ''\n            refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                    snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Vote\").child($scope.currentAuthGet.uid).once(\"value\", function(snapSHOT){\n                                if(snapSHOT.val().Vote == 1)\n                                    returne = 'Up';\n                                else if(snapSHOT.val().Vote == -1)\n                                    returne = 'Down'\n                            })\n                        }\n                    })\n                })\n            return returne;    \n        }\n        $scope.upVoteCheck = function(){\n            if(VoteHelper() == 'Up')\n                return 'upvote';\n        }\n        \n        $scope.downVoteCheck = function() {\n            if(VoteHelper() == 'Down')\n                return 'downvote';\n        }\n\n        //BookMark\n            //Ng-if\n                //Toggle\n                    //$scope.bookMarkToggleTopic = true;\n                     $scope.objBookmark = $firebaseObject(refService.ref().child(\"Topics\"))\n                      $scope.objBookmark.$loaded(function(dataBook){\n                          for(var prop in dataBook){\n                              if(dataBook[prop] !== null) {\n                                  if(dataBook[prop].Postnum == $stateParams.POST) {\n                                      refService.ref().child(\"Topics\").child(dataBook[prop].pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).on(\"value\", function(snapap){\n                                           if(snapap.val() !== null) {\n                                               $scope.bookMarkToggleTopic = !(snapap.val().Bookmark);\n                                           }\n                                           else\n                                            $scope.bookMarkToggleTopic = true;\n                                      })\n                                  }\n                              }\n                          }\n                      })\n            //Ng-Click        \n            $scope.bookmarkClickOutlineTopic = function() {\n                refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                    snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                                Bookmark: true\n                            })\n                        }\n                    })\n                })\n                $scope.bookMarkToggleTopic = false;\n            }\n            $scope.bookmarkClickNonOutlineTopic = function() {\n                refService.ref().child(\"Topics\").once(\"value\", function(snapshotBookMarkOutlineTopic) {\n                    snapshotBookMarkOutlineTopic.forEach(function(evenChildBook) {\n                        var bookkey = evenChildBook.key();\n                        var bookchildData = evenChildBook.val();\n                        if (bookchildData.Postnum == $stateParams.POST) {\n                            refService.ref().child(\"Topics\").child(bookchildData.pushKey).child(\"Bookmarks\").child($scope.currentAuthGet.uid).update({\n                                Bookmark: false\n                            })\n                        }\n                    })\n                })\n                $scope.bookMarkToggleTopic = true;\n            }\n        \n        //Edit\n            //ng-if\n                $scope.editTopicPriv = function(){\n                    if($scope.isModerator == true) \n                        return true;\n                    else if($scope.creatorUID == $scope.currentAuthGet.uid)\n                        return true;\n                    else\n                        return false;\n                }\n                       $scope.flagSee = function(){\n                           if($scope.isModerator == true)\n                                return true;\n                            else if(currentAuth.uid == $scope.creatorUID)\n                                return false;\n                            else if(currentAuth.uid == null)\n                                return false;\n                            else\n                                return true;\n                        }\n                \n            //ng-click\n                $scope.editTopic = function(ev){\n                    if (ev) {\n                        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                         $mdDialog.show({\n                        controller: 'editTopicPanelCtrl',\n                        templateUrl: 'app/components/editTopicPanel/editTopicPanel.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n                     \n                    }\n                    else {\n                        return null;\n                    }\n                }\n                \n                $scope.canDeleteCheck = function(rep) {\n                    if($scope.isModerator == true) \n                        return true;\n                    else\n                        return false;\n                }\n                \n        //Delete\n            //Ng-if\n                $scope.deleteTopicPriv = function() {\n                    if($scope.isModerator == true) \n                        return true;\n                    else\n                        return false;\n                }\n                \n            //Ng-Click\n                $scope.deleteTopic = function() {\n                     vex.dialog.confirm({\n                         message: 'Are you sure you want to delete this topic?',\n                         callback: function(value) {\n                             if (value == true) {\n                                 refService.ref().child(\"Topics\").once(\"value\", function(snapshotTopic) {\n                                     snapshotTopic.forEach(function(evenChildBook) {\n                                         var bookkey = evenChildBook.key();\n                                         var bookchildData = evenChildBook.val();\n                                         if (bookchildData.Postnum == $stateParams.POST) {\n                                             refService.ref().child(\"Topics\").child(bookchildData.pushKey)\n                                                 .remove(function(error) {\n                                                     if (error)\n                                                         alertify.error(\"Deleting Topic Failed\");\n                                                     else {\n                                                         refService.ref().child(\"Replies\").child($stateParams.USERNAME + $stateParams.POST)\n                                                             .remove(function(error) {\n                                                                 if (error)\n                                                                     alertify.error(\"Deleting Topic Failed\");\n                                                                 else {\n                                                                    alertify.success(\"Deleted, Successfully\")\n                                                                 }\n                                                             })\n                                                     }\n                                                 })\n                                         }\n                                     })\n                                 })\n                             }\n                         }\n                     });\n                }\n                \n                \n\n        //TOPIC BUTTONS///////////////////END///////////////////////////////////////\n        $scope.replyTopic = function(ev) {\n            replyService.setTopicInfo($scope.creatorAvatar, $scope.creatorTitle, $scope.creatorUID, $scope.creatorUsername,\n                $scope.creatorValue, $stateParams.DATE, $scope.creatorEmail, $scope.timeSinceCreated,\n                $scope.creatorAvatar, $stateParams.POST);\n            if (ev) {\n                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\n                $mdBottomSheet.show({\n                        controller: 'newReplyCtrl',\n                        templateUrl: 'app/components/newReply/newReply.html',\n                        parent: angular.element(document.body),\n                        resolve: {\n                            // controller will not be loaded until $waitForAuth resolves\n                            // Auth refers to our $firebaseAuth wrapper in the example above\n                            \"currentAuth\": [\"refService\", function(refService) {\n                                // $waitForAuth returns a promise so the resolve waits for it to complete\n                                return refService.refAuth().$requireAuth();\n                            }]\n                        },\n                        targetEvent: ev,\n                        clickOutsideToClose: true,\n                        fullscreen: useFullScreen\n                    })\n                    .then(function(answer) {\n                        //Then Argument\n                    }, function() {\n                        //Canceled Dialog\n                    });\n            }\n            else {\n                return null;\n            }\n        }\n    }\n})(angular);","(function(angular) {\n\n'use strict';\n angular\n     .module('ForumApp')\n     .controller('authHome', [\"$scope\", \"$firebaseObject\", \"$state\", \"$mdDialog\", \"$mdMedia\", \"$firebaseArray\", \"refService\", \"$mdBottomSheet\", authHomeCtrl])\n\n    function authHomeCtrl($scope, $firebaseObject, $state, $mdDialog, $mdMedia, $firebaseArray, refService, $mdBottomSheet) {\n        $state.go('authHome.desc')\n\n        $scope.currentAuthGetHome = refService.ref().getAuth();\n\n        if ($scope.currentAuthGetHome != null) {\n            var amOnline = new Firebase('https://uniquecoders.firebaseio.com/.info/connected');\n            var userRef = new Firebase('https://uniquecoders.firebaseio.com/presence/' + $scope.currentAuthGetHome.uid);\n            amOnline.on('value', function(snapshot) {\n                if (snapshot.val()) {\n                    userRef.onDisconnect().set(Firebase.ServerValue.TIMESTAMP);\n                    userRef.set(\"Online\");\n                }\n            });\n\n            document.onIdle = function() {\n                userRef.set('idle');\n            }\n            document.onAway = function() {\n                userRef.set('away');\n            }\n            document.onBack = function(isIdle, isAway) {\n                userRef.set('online');\n            }\n        }\n\n\n\n\n        //ADD TAGS\n        if (!alertify.myAlert) {\n            alertify.dialog('myAlert', function() {\n                return {\n                    main: function(message) {\n                        this.message = message;\n                    },\n                    setup: function() {\n                        return {\n                            buttons: [{\n                                text: \"Ok!\",\n                                key: 27 /*Esc*/\n                            }],\n                            focus: {\n                                element: 0\n                            }\n                        };\n                    },\n                    prepare: function() {\n                        this.setContent(this.message);\n                    }\n                }\n            });\n        }\n\n\n\n        //          var tour = new Tour({\n        //               steps: [\n        //               {\n        //                 element: \".toolbar_new_topic\",\n        //                 title: \"Avatar\",\n        //                 content: \"Click on it to change settings, see profile, or logout.\"\n        //               },\n        //               {\n        //                 element: \".toolbar_new_topic\",\n        //                 title: \"Creating a new topic\",\n        //                 content: \"To Create a new topic, click on the new topic button\"\n        //               },\n        //               {\n        //                 element: \".listdemoListControls\",\n        //                 title: \"Topics\",\n        //                 content: \"These are the topics in this forum\"\n        //               },\n        //               {\n        //                 element: \".noright\",\n        //                 title: \"Topic\",\n        //                 content: \"Click on topic, to see its value!\"\n        //               }\n        //             ]});\n\n        //             // Initialize the tour\n        //             tour.init();\n        // // Start the tour\n        // tour.start();\n\n\n        $scope.authData = refService.ref().getAuth();\n\n        if ($scope.authData) {\n            var currentAuth = refService.ref().getAuth();\n            refService.ref().onAuth(function(authData) {})\n\n            var obj = $firebaseObject(refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid));\n            obj.$loaded(function(data) {\n                    $scope.Username = data.Username;\n                    $scope.Email = data.Email;\n                    $scope.UID = currentAuth.uid;\n                    $scope.image = data.Image;\n\n                    if (data.newUser == true) {\n                        //NewUser Vec\n\n                    }\n                },\n                function(error) {\n                    console.error(\"Error:\", error);\n                }\n            );\n\n        }\n        else {\n            $scope.Username = \"Tester\";\n            $scope.Email = \"Tester@Tester.com\";\n            $scope.UID = \"3424j23k4j32n4un43ui\";\n            $scope.image = 'http://cs624223.vk.me/v624223037/2b1bb/GRTKddkmXiw.jpg'\n        //alertify.myAlert(\"Please Signup to get more feautres. Sign Up Button located at top right.\");\n            $mdDialog.show(\n              $mdDialog.alert()\n                .parent(angular.element(document.querySelector('#popupContainer')))\n                .clickOutsideToClose(true)\n                .title('Sign up!')\n                .textContent('YPlease Signup to get more feautres. Sign Up Button located at top right')\n                .ok('Got it!')\n                .targetEvent(document.body)\n            );\n        }\n\n        $scope.goToProfile = function() {\n            $state.go(\"authHome.profile\", {\n                \"UID\": $scope.currentAuthGetHome.uid\n            })\n        }\n        $scope.openMenu = function($mdOpenMenu, ev) {\n            $mdOpenMenu(ev);\n        }\n\n        $scope.logout = function() {\n            refService.ref().unauth();\n            location.reload(true);\n            location.reload(true);\n        }\n\n        $scope.goToSettings = function() {\n            $state.go(\"authHome.settings\", {\n                \"UID\": $scope.UID,\n                \"USERNAME\": $scope.Username\n            })\n        }\n\n\n\n    }\n\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('descChangeCtrl',[\"$scope\",\"$mdDialog\",\"$mdMedia\",\"currentAuth\",\"refService\", descChangeCtrl])\n    \n    function descChangeCtrl($scope,$mdDialog,$mdMedia,currentAuth,refService){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.change = function(desc){\n            if(desc.length > 5){\n                refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                    Description : desc\n                }, function(error) {\n                  if (error) {\n                    alertify.error('Synchronization failed');\n                  } else {\n                    alertify.success('Synchronization succeeded');\n                    $mdDialog.cancel();\n                  }\n                  })\n                \n            }else{\n                alertify.error(\"LEGNTH HAS TO BE ATLEAST 5 CHARACTERS!\")\n            }\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp');\n    \n    app.controller('emailSettingsCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", emailSettingsCtrl])\n    \n    function emailSettingsCtrl($scope,refService,currentAuth,$mdDialog){\n\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n\n        $scope.changeEmailDialog = function(){\n           \n            var email = $scope.emailChange || $scope.emailChange.toString;\n            var oldEmail = $scope.emailChangeOld;\n            refService.ref().changeEmail({\n                oldEmail: oldEmail,\n                newEmail: email,\n                password: $scope.passwordChangeOld\n            }, function(error) {\n                if (error) {\n                    switch (error.code) {\n                        case \"INVALID_PASSWORD\":\n                            alertify.error(\"The specified user account password is incorrect.\");\n                            break;\n                        case \"INVALID_USER\":\n                            alertify.error(\"The specified user account does not exist.\");\n                            break;\n                        default:\n                            alertify.error(\"Error creating user:\" +  error);\n                    }\n                } else {\n                    refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                        Email: email\n                    })\n                    \n                    \n                    alertify.success(\"User email changed successfully!\");\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Email: email\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorEmail : email                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n                    location.reload(true);\n                    location.reload(true);\n                    $mdDialog.cancel();\n                }\n            });\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('imageChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\",\"encodeImageToBase64\",\"$firebaseObject\", imageChangeCtrl])\n    \n    function imageChangeCtrl($scope,refService,currentAuth,$mdDialog,encodeImageToBase64,$firebaseObject){\n          $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        \n        $scope.uploadFile = function(event){\n            var doc = document.getElementById('inputFileToLoad');\n            var file = document.getElementById('inputFileToLoad').files;\n            var base64Image = encodeImageToBase64.encode(doc,file,refService.ref(), currentAuth.uid);\n            \n            setTimeout(function(){\n                location.reload(true);\n                location.reload(true);\n            }, 3000)\n                \n        };\n    }\n})(angular);\n","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('passwordChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", passwordChangeCtrl])\n    \n    function passwordChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changePasswordDialog = function(){\n\n            refService.ref().changePassword({\n              email: $scope.emailNormal,\n              oldPassword: $scope.passwordChangeOld,\n              newPassword: $scope.passwordChangeNew\n            }, function(error) {\n              if (error) {\n                switch (error.code) {\n                  case \"INVALID_PASSWORD\":\n                    alertify.error(\"The specified user account password is incorrect.\");\n                    break;\n                  case \"INVALID_USER\":\n                    alertify.error(\"The specified user account does not exist.\");\n                    break;\n                  default:\n                    alertify.error(\"Error changing password:\", error);\n                }\n              } else {\n                alertify.success(\"User password changed successfully!\");\n                location.reload(true);\n                location.reload(true);\n                $mdDialog.cancel();\n              }\n            });\n        }\n    }\n})(angular);","(function(angular){\n    var app = angular.module('ForumApp')\n    \n    app.controller('usernameChangeCtrl', [\"$scope\",\"refService\",\"currentAuth\",\"$mdDialog\", usernameChangeCtrl])\n    \n    function usernameChangeCtrl($scope,refService,currentAuth,$mdDialog){\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function(answer) {\n            $mdDialog.hide(answer);\n        };\n        \n        $scope.changeUsernameDialog = function(){\n            var username = $scope.usernameNew;\n            refService.ref().child(\"UserAuthInfo\").child(currentAuth.uid).update({\n                Username : username\n            })\n            //Updating Topics\n                    refService.ref().child(\"Topics\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            if (childData.UID == currentAuth.uid) {\n                                refService.ref().child(\"Topics\").child(childData.pushKey).update({\n                                    Username: username\n                                })\n                            }\n                        })\n                    })\n                    \n            //Updating Replise\n                    \n                    refService.ref().child(\"Replies\").once(\"value\", function(snapshot) {\n\n                        snapshot.forEach(function(childSnapshot) {\n                            var key = childSnapshot.key();\n                            var childData = childSnapshot.val();\n                            childSnapshot.forEach(function(EvenChild){\n                                var keyNest = EvenChild.key();\n                                var childDataNest = EvenChild.val();\n                                if(childDataNest.replyCreatorUID == currentAuth.uid){\n                                  refService.ref().child(\"Replies\").child(key).child(childDataNest.pushKey).update\n                                    ({\n                                        replyCreatorUsername : username                   \n                                    })\n                                }\n                            })\n                        })\n                    })\n            location.reload(true);\n                location.reload(true);        \n            $mdDialog.cancel();\n        }\n    }\n})(angular);"],"sourceRoot":"/source/"}